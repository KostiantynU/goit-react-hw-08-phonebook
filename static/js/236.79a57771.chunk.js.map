{"version":3,"file":"static/js/236.79a57771.chunk.js","mappings":"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","sources":["components/LogInForm/LogInFormStyled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nexport const LogInFormStyled = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n","import { useFormik } from 'formik';\nimport { register } from 'redux/auth/authOperations';\nimport { motion } from 'framer-motion';\nimport { AddBtn, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { LogInFormStyled } from 'components/LogInForm/LogInFormStyled';\nimport { useDispatch } from 'react-redux';\n\nconst RegisterFormStyled = () => {\n  const dispatch = useDispatch();\n  const validate = values => {\n    const errors = {};\n    if (!values.userEmail) {\n      errors.userEmail = 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.userEmail)) {\n      errors.userEmail = 'Invalid email';\n    }\n\n    if (!values.userPassword) {\n      errors.userPassword = 'Password is required';\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/i.test(values.userPassword)) {\n      errors.userPassword = 'Invalid password';\n    }\n\n    if (!values.userName) {\n      errors.userName = 'Name is required';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      userEmail: '',\n      userPassword: '',\n      userName: '',\n    },\n    validate,\n    onSubmit: values => {\n      const newUser = { ...values };\n      dispatch(register(newUser));\n      formik.handleReset();\n    },\n  });\n\n  return (\n    <LogInFormStyled onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"userName\">Enter your name</label>\n      <NameInput\n        type=\"text\"\n        name=\"userName\"\n        {...formik.getFieldProps('userName')}\n        $formadd=\"400px\"\n      />\n      {formik.touched.userName && formik.errors.userName ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.userName}</div>\n        </motion.div>\n      ) : null}\n\n      <label htmlFor=\"userEmail\">Enter your e-mail</label>\n      <NameInput\n        type=\"email\"\n        name=\"userEmail\"\n        {...formik.getFieldProps('userEmail')}\n        $formadd=\"400px\"\n      />\n      {formik.touched.userEmail && formik.errors.userEmail ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.userEmail}</div>\n        </motion.div>\n      ) : null}\n\n      <label htmlFor=\"userPassword\">Enter password</label>\n      <NameInput\n        type=\"password\"\n        name=\"userPassword\"\n        {...formik.getFieldProps('userPassword')}\n        $formadd=\"400px\"\n      />\n      {formik.touched.userPassword && formik.errors.userPassword ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.userPassword}</div>\n        </motion.div>\n      ) : null}\n\n      <AddBtn type=\"submit\" $padding=\"10px 15px\">\n        Register!\n      </AddBtn>\n    </LogInFormStyled>\n  );\n};\n\n// this is for create pass (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")\n// this is for create pass, less difficulty (\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\")\n\nexport default RegisterFormStyled;\n","import RegisterFormStyled from 'components/RegisterForm/RegisterForm';\nimport { StyledNavLink } from 'components/SharedLayout/AppBarStyled';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterFormStyled />\n      <StyledNavLink to=\"/login\" marginleft=\"auto\" marginright=\"auto\" width=\"120px\">\n        Or logIn!\n      </StyledNavLink>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["LogInFormStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","formik","useFormik","initialValues","userEmail","userPassword","userName","validate","values","errors","test","onSubmit","newUser","_objectSpread","register","handleReset","_jsxs","handleSubmit","children","_jsx","htmlFor","NameInput","type","name","getFieldProps","$formadd","touched","motion","initial","opacity","animate","exit","AddBtn","$padding","_Fragment","RegisterFormStyled","StyledNavLink","to","marginleft","marginright","width"],"sourceRoot":""}