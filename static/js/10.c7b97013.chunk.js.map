{"version":3,"file":"static/js/10.c7b97013.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/PhoneBookListItem/PhoneBookListItemStyled.js","components/EditContact/EditContactStyled.js","components/EditContact/EditContact.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookList/PhoneBookListStyled.js","components/PhoneBookForm/PhoneBookFormik.jsx","components/AppStyled.js","pages/HomePage.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/contactsSliceWB';\nimport { SearchInput, Paragraph } from '../PhoneBookForm/PhoneBookFormStyled';\n\nfunction Filter() {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Paragraph>Find contacts by name</Paragraph>\n      <SearchInput\n        onChange={evt => dispatch(changeFilter(evt.target.value.toLowerCase().trim()))}\n        value={filterValue}\n        $formadd=\"90%\"\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nexport const PhoneBookListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.2rem;\n  margin: 0.2rem;\n  border: 1px solid rgb(46, 191, 145);\n  border-radius: 8px;\n\n  &:hover {\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n  }\n  /* overflow: hidden;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%) translateX(-110%) skew(-30deg);\n    width: 120%;\n    height: 120%;\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n    transition: 500ms;\n    pointer-events: none;\n  }\n  &:hover::after {\n    transform: translateY(-50%) translateX(-8%) skew(-30deg);\n  } */\n`;\nexport const NameSpan = styled.span`\n  font-weight: 600;\n`;\nexport const TelSpan = styled(NameSpan)`\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\nimport { StyledTextInput, ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nexport const EditContactForm = styled.form`\n  display: flex;\n  width: 100%;\n  justify-content: space-evenly;\n  align-items: center;\n  /* position: absolute;\n  left: 0;\n  top: -50%; */\n`;\nexport const EditInput = styled(StyledTextInput)`\n  width: 300px;\n  margin: 0;\n  margin-bottom: 0;\n`;\nexport const EditSubBtn = styled(ListBtn).attrs(props => ({\n  $padding: props.$padding || '0.3rem',\n}))`\n  background: rgb(131, 96, 195);\n  margin: 0;\n  padding: ${props => props.$padding};\n  color: black;\n  &:hover {\n    background: rgb(131, 96, 195);\n  }\n`;\nexport const CloseBtn = styled(EditSubBtn)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20px;\n  height: 20px;\n  color: white;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { updateContact } from 'redux/contacts/operationsWithBackend';\nimport { motion } from 'framer-motion';\nimport { EditContactForm, EditInput, CloseBtn, EditSubBtn } from './EditContactStyled';\nimport { ErrorDiv } from 'components/PhoneBookForm/PhoneBookFormStyled';\n\nconst EditContact = ({ handleChangeEditOpen, contactId }) => {\n  const contactsItems = useSelector(selectItems);\n  const dispatch = useDispatch();\n  const existingContact = contactsItems.find(el => el._id === contactId);\n\n  const validate = values => {\n    const errors = {};\n    // if (!values.name) {\n    //   errors.name = 'Required';\n    // } else\n    if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.contactName)) {\n      errors.contactName = 'Invalid name';\n    }\n\n    // if (!values.number) {\n    //   errors.number = 'Required';\n    // } else\n    if (\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n        values.phoneNumber\n      )\n    )\n      // {\n      //   errors.phoneNumber = 'Invalid number';\n      // }\n\n      return errors;\n  };\n\n  const editFormik = useFormik({\n    initialValues: {\n      contactName: existingContact.contactName,\n      phoneNumber: existingContact.phoneNumber,\n    },\n    validate,\n    onSubmit: values => {\n      const updContact = {\n        id: contactId,\n        contactName: values.contactName,\n        phoneNumber: values.phoneNumber,\n      };\n\n      if (\n        contactsItems.some(el => {\n          return (\n            el.contactName.toLowerCase() === updContact.contactName.toLowerCase() &&\n            el.phoneNumber === updContact.phoneNumber\n          );\n        })\n      ) {\n        editFormik.handleReset();\n        return alert(`${updContact.contactName} is already in list!`);\n      }\n\n      dispatch(updateContact(updContact));\n      editFormik.handleReset();\n      handleChangeEditOpen();\n    },\n  });\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        style={{\n          position: 'absolute',\n          left: '0',\n          top: '-90%',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          borderRadius: '8px',\n          // background: 'rgb(46, 191, 145)',\n          background: 'linear-gradient(310deg, rgb(46, 191, 145), rgb(131, 96, 195))',\n        }}\n      >\n        <EditContactForm onSubmit={editFormik.handleSubmit}>\n          <EditInput\n            id=\"contactName\"\n            name=\"contactName\"\n            type=\"text\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={editFormik.handleChange}\n            onBlur={editFormik.handleBlur}\n            value={editFormik.values.contactName}\n            $formadd=\"300px\"\n            placeholder=\"Enter new name\"\n          />\n          <EditInput\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            type=\"tel\"\n            title=\"Phone number may contains \\'+\\' and numbers\"\n            onChange={editFormik.handleChange}\n            onBlur={editFormik.handleBlur}\n            value={editFormik.values.phoneNumber}\n            $formadd=\"300px\"\n            placeholder=\"Enter new number\"\n          />\n          {editFormik.touched.phoneNumber && editFormik.errors.phoneNumber ? (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <ErrorDiv>{editFormik.errors.phoneNumber}</ErrorDiv>\n            </motion.div>\n          ) : null}\n          <EditSubBtn $padding={'5px'} type=\"submit\">\n            Change\n          </EditSubBtn>\n          <CloseBtn type=\"button\" onClick={handleChangeEditOpen}>\n            X\n          </CloseBtn>\n        </EditContactForm>\n      </motion.div>\n    </>\n  );\n};\n\nexport default EditContact;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactWB } from 'redux/contacts/operationsWithBackend';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { PhoneBookListItem, NameSpan, TelSpan } from './PhoneBookListItemStyled';\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport EditContact from 'components/EditContact/EditContact';\nimport { MdFavoriteBorder, MdFavorite } from 'react-icons/md';\nimport { useState } from 'react';\n\nfunction BookItem({ contactName, phoneNumber, id, favorite }) {\n  const dispatch = useDispatch();\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const handleChangeEditOpen = () => {\n    setIsEditOpen(prevState => !prevState);\n  };\n  const isDeleting = useSelector(selectIsLoading);\n\n  return (\n    <PhoneBookListItem>\n      <NameSpan>{contactName} :</NameSpan> <TelSpan>{phoneNumber}</TelSpan>\n      {favorite ? <MdFavorite /> : <MdFavoriteBorder />}\n      <ListBtn type=\"button\" onClick={handleChangeEditOpen}>\n        Edit\n      </ListBtn>\n      <ListBtn type=\"button\" onClick={() => dispatch(deleteContactWB(id))}>\n        {isDeleting ? 'Deleting' : 'Delete'}\n      </ListBtn>\n      {isEditOpen && <EditContact handleChangeEditOpen={handleChangeEditOpen} contactId={id} />}\n    </PhoneBookListItem>\n  );\n}\n\nBookItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default BookItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsWB } from 'redux/contacts/operationsWithBackend';\nimport {\n  selectFilter,\n  selectIsErrorPhoneBook,\n  selectIsLoading,\n  selectItems,\n} from 'redux/contacts/selectors';\nimport { motion } from 'framer-motion';\nimport { ListContacts, LoadingMessage, ErrorSpanStyled } from './PhoneBookListStyled';\nimport BookItem from 'components/PhoneBookListItem/PhoneBookListItem';\n\nfunction PhoneBookList() {\n  const contactsItemsRedux = useSelector(selectItems);\n  const isLoadingRedux = useSelector(selectIsLoading);\n  const isErrorReduxPhoneBook = useSelector(selectIsErrorPhoneBook);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const filteredArray = contactsItemsRedux.filter(el =>\n    el.contactName.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContactsWB());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isErrorReduxPhoneBook && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <ErrorSpanStyled>Some error hapenned: {isErrorReduxPhoneBook}</ErrorSpanStyled>\n          {/* Here I show an error message for the user - I think this is not necessary. Need to hide it, and show only notification?.. */}\n        </motion.div>\n      )}\n      {isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <LoadingMessage>Loading contacts...</LoadingMessage>\n        </motion.div>\n      )}\n      {!isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          {contactsItemsRedux.length ? (\n            <>\n              <ListContacts>\n                {filteredArray.map(({ contactName, _id, phoneNumber, favorite }) => {\n                  return (\n                    <BookItem\n                      key={_id}\n                      contactName={contactName}\n                      phoneNumber={phoneNumber}\n                      id={_id}\n                      favorite={favorite}\n                    />\n                  );\n                })}\n              </ListContacts>\n            </>\n          ) : (\n            <p>Your list of contacts is empty!</p>\n          )}\n        </motion.div>\n      )}\n    </>\n  );\n}\n\nexport default PhoneBookList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0.5rem;\n`;\nexport const ListContacts = styled.ul`\n  position: relative;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 18px;\n  list-style: disc;\n`;\nexport const LoadingMessage = styled.p`\n  background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n`;\n\nexport const ErrorSpanStyled = styled.span`\n  color: rgb(189, 4, 75);\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { addContactWB } from 'redux/contacts/operationsWithBackend';\nimport { BookForm, AddBtn, Div, FavoriteCheckboxSecond, NameInput } from './PhoneBookFormStyled';\n\nfunction PhoneBookForm() {\n  const contactsItems = useSelector(selectItems);\n  const dispatch = useDispatch();\n\n  const validate = values => {\n    const errors = {};\n    if (!values.contactName) {\n      errors.contactName = 'Required';\n    } else if (\n      !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.contactName)\n    ) {\n      errors.contactName = 'Invalid contactName';\n    }\n\n    if (!values.phoneNumber) {\n      errors.phoneNumber = 'Required';\n    } else if (\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n        values.phoneNumber\n      )\n    ) {\n      errors.phoneNumber = 'Invalid phoneNumber';\n    }\n\n    return errors;\n  };\n\n  // const formik = useFormik({\n  //   initialValues: { contactName: '', phoneNumber: '', favorite: isChecked },\n  //   validate,\n  //   onSubmit: values => {\n  //     const newContact = {\n  //       contactName: values.contactName,\n  //       phoneNumber: values.phoneNumber,\n  //       favorite: values.favorite,\n  //     };\n\n  //     if (\n  //       contactsItems.some(el => {\n  //         return el.contactName.toLowerCase().includes(newContact.contactName.toLowerCase());\n  //       })\n  //     ) {\n  //       formik.handleReset();\n  //       return alert(`${newContact.contactName} is already in list!`);\n  //     }\n\n  //     dispatch(addContactWB(newContact));\n  //     formik.handleReset();\n  //   },\n  // });\n\n  return (\n    <Formik\n      initialValues={{ contactName: '', phoneNumber: '', favorite: false }}\n      validate={validate}\n      onSubmit={(values, { setSubmitting, resetForm, isValidating }) => {\n        setSubmitting(true);\n        const newContact = {\n          contactName: values.contactName,\n          phoneNumber: values.phoneNumber,\n          favorite: values.favorite,\n        };\n\n        if (\n          contactsItems.some(el => {\n            return el.contactName.toLowerCase().includes(newContact.contactName.toLowerCase());\n          })\n        ) {\n          // formik.handleReset();\n          resetForm();\n          return alert(`${newContact.contactName} is already in list!`);\n        }\n        setSubmitting(false);\n        dispatch(addContactWB(newContact));\n        resetForm();\n      }}\n    >\n      {({ handleSubmit, isSubmitting, values }) => (\n        <BookForm onSubmit={handleSubmit}>\n          <Div>\n            {/* <Label htmlFor=\"contactName\">Name</Label>\n            <Field\n              id=\"contactName\"\n              name=\"contactName\"\n              type=\"text\"\n              title=\"Name of contact may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"Enter the contact name\"\n              component={StyledTextInput}\n            />\n            <ErrorMessage name=\"contactName\">{msg => <ErrorDiv>{msg}</ErrorDiv>}</ErrorMessage> */}\n\n            <NameInput\n              label=\"Contact name\"\n              id=\"contactName\"\n              name=\"contactName\"\n              title=\"Name of contact may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"Enter the contact name\"\n              $width=\"300px\"\n              $marginBottom=\"0.5rem\"\n            />\n\n            <NameInput\n              label=\"Phone number\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              title=\"Phone number may contains \\'+\\' and numbers\"\n              placeholder=\"Enter the contact phone number\"\n              $width=\"300px\"\n              $marginBottom=\"0.5rem\"\n            />\n\n            {/* <Label htmlFor=\"phoneNumber\">Phone number</Label>\n            <Field\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              type=\"text\"\n              title=\"Phone number may contains \\'+\\' and numbers\"\n              placeholder=\"Enter the contact phone number\"\n              component={TelInput}\n            />\n            <ErrorMessage name=\"phoneNumber\">{msg => <ErrorDiv>{msg}</ErrorDiv>}</ErrorMessage> */}\n\n            <FavoriteCheckboxSecond name={'favorite'}>Favorite</FavoriteCheckboxSecond>\n\n            {/* <Label htmlFor=\"favorite\" $disFlex=\"flex\" $jusCon=\"space-between\">\n              Favorite{values.favorite ? <MdFavorite /> : <MdFavoriteBorder />}\n              <Field type=\"checkbox\" name=\"favorite\" id=\"favorite\" component={FavoriteCheckbox} />\n            </Label> */}\n\n            <AddBtn type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </AddBtn>\n            {/* The old code */}\n            {/* <NameInput\n            id=\"name\"\n            name=\"contactName\"\n            type=\"text\"\n            title=\"ContactName may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.contactName}\n            $formadd=\"300px\"\n          />\n          {formik.touched.contactName && formik.errors.contactName ? (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <ErrorDiv>{formik.errors.contactName}</ErrorDiv>\n            </motion.div>\n          ) : null} */}\n            {/* <TelInput\n            id=\"number\"\n            name=\"phoneNumber\"\n            type=\"tel\"\n            title=\"Phone number may contains \\'+\\' and numbers\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.phoneNumber}\n            $formadd=\"300px\"\n          />\n          {formik.touched.phoneNumber && formik.errors.phoneNumber ? (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <ErrorDiv>{formik.errors.phoneNumber}</ErrorDiv>\n            </motion.div>\n          ) : null} */}\n            {/* <FavoriteCheckbox\n          id=\"favorite\"\n          name=\"favorite\"\n          type=\"checkbox\"\n          title=\"Favorite contact?\"\n          checked={isChecked}\n          // required\n          onChange={handleCheckbox}\n          // onBlur={formik.handleBlur}\n          // value={formik.values.favorite}\n          // $formadd=\"100%\"\n        /> */}\n          </Div>\n        </BookForm>\n      )}\n    </Formik>\n  );\n}\n\nexport default PhoneBookForm;\n","import styled from 'styled-components';\n\nexport const WrapperForContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 0.5rem;\n`;\nexport const AddDiv = styled.div`\n  width: 400px;\n  padding: 5px;\n`;\nexport const FilterListDiv = styled.div`\n  flex-grow: 2;\n`;\nexport const MainTitle = styled.h1`\n  margin: 0.2rem;\n`;\n","import PhoneBookForm from 'components/PhoneBookForm/PhoneBookFormik';\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\nimport Filter from 'components/Filter/Filter';\nimport { AddDiv, FilterListDiv, MainTitle, WrapperForContent } from 'components/AppStyled';\nimport { Title } from 'components/PhoneBookList/PhoneBookListStyled';\nimport { motion } from 'framer-motion';\n\nfunction HomePage() {\n  return (\n    <>\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <MainTitle>Phonebook</MainTitle>\n        <WrapperForContent>\n          <AddDiv>\n            <Title>Add contact</Title>\n            <PhoneBookForm />\n          </AddDiv>\n          <FilterListDiv>\n            <Title>Contacts</Title>\n            <Filter />\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <PhoneBookList />\n            </motion.div>\n          </FilterListDiv>\n        </WrapperForContent>\n      </motion.div>\n    </>\n  );\n}\nexport default HomePage;\n","export const selectFilter = state => state.contacts.filter;\nexport const selectItems = state => state.contacts.phonebook.items;\nexport const selectIsErrorPhoneBook = state => state.contacts.phonebook.isError;\nexport const selectIsLoading = state => state.contacts.phonebook.selectIsLoading;\n"],"names":["filterValue","useSelector","selectFilter","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Paragraph","SearchInput","onChange","evt","changeFilter","target","value","toLowerCase","trim","$formadd","PhoneBookListItem","styled","_templateObject","_taggedTemplateLiteral","NameSpan","_templateObject2","TelSpan","_templateObject3","EditContactForm","EditInput","StyledTextInput","EditSubBtn","ListBtn","attrs","props","$padding","CloseBtn","_templateObject4","_ref","handleChangeEditOpen","contactId","contactsItems","selectItems","existingContact","find","el","_id","editFormik","useFormik","initialValues","contactName","phoneNumber","validate","values","errors","test","onSubmit","updContact","id","some","handleReset","alert","concat","updateContact","motion","initial","opacity","animate","exit","style","position","left","top","width","height","display","alignItems","borderRadius","background","handleSubmit","name","type","title","handleChange","onBlur","handleBlur","placeholder","touched","ErrorDiv","onClick","favorite","_useState","useState","_useState2","_slicedToArray","isEditOpen","setIsEditOpen","prevState","isDeleting","selectIsLoading","MdFavorite","MdFavoriteBorder","deleteContactWB","EditContact","contactsItemsRedux","isLoadingRedux","isErrorReduxPhoneBook","selectIsErrorPhoneBook","filter","filteredArray","includes","useEffect","fetchContactsWB","ErrorSpanStyled","LoadingMessage","length","ListContacts","map","BookItem","Title","Formik","setSubmitting","resetForm","isValidating","newContact","addContactWB","_ref2","isSubmitting","BookForm","Div","NameInput","label","$width","$marginBottom","FavoriteCheckboxSecond","AddBtn","disabled","WrapperForContent","AddDiv","FilterListDiv","MainTitle","PhoneBookForm","Filter","PhoneBookList","state","contacts","phonebook","items","isError"],"sourceRoot":""}