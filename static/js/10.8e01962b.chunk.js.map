{"version":3,"file":"static/js/10.8e01962b.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/PhoneBookListItem/PhoneBookListItemStyled.js","components/EditContact/EditContactStyled.js","components/EditContact/EditContact.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookList/PhoneBookListStyled.js","components/PhoneBookForm/PhoneBookFormik.jsx","components/AppStyled.js","pages/HomePage.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n// import { selectFilter } from 'redux/contacts/selectors';\n// import { changeFilter } from 'redux/contacts/contactsSliceWB';\nimport { StyledTextInput, Paragraph } from '../PhoneBookForm/PhoneBookFormStyled';\nimport { selectFilterContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\nimport { changeFilterUnited } from 'redux/authAndContactsSlice/authAndContactsSlice';\n\nfunction Filter() {\n  // const filterValue = useSelector(selectFilter);\n  const filterValue = useSelector(selectFilterContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Paragraph>Find contacts by name</Paragraph>\n      <StyledTextInput\n        onChange={evt => dispatch(changeFilterUnited(evt.target.value.toLowerCase().trim()))}\n        value={filterValue}\n        placeholder=\"Enter the contact name\"\n        $width=\"100%\"\n        $margin=\"0\"\n        $marginTop=\"0.5rem\"\n        $marginBottom=\"2rem\"\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nexport const PhoneBookListItem = styled.li`\n  position: relative;\n\n  /* display: flex;\n  justify-content: space-between;\n  align-items: center; */\n  display: grid;\n  grid-template-columns: 3.5fr 0.1fr 1.5fr 0.25fr 0.5fr 0.5fr;\n  grid-gap: 5px;\n  align-items: center;\n  padding: 0.2rem;\n  margin: 0.2rem;\n  border: 1px solid rgb(46, 191, 145);\n  border-radius: 8px;\n\n  &:hover {\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n  }\n  overflow: hidden;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%) translateX(-110%) skew(-30deg);\n    width: 120%;\n    height: 120%;\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n    transition: 500ms;\n    pointer-events: none;\n  }\n  &:hover::after {\n    transform: translateY(-50%) translateX(-8%) skew(-30deg);\n  }\n`;\nexport const NameSpan = styled.span`\n  font-weight: 600;\n`;\nexport const TelSpan = styled(NameSpan)`\n  font-weight: 500;\n`;\nexport const DoubleDotSpan = styled.span`\n  font-weight: 600;\n  justify-self: center;\n  align-self: center;\n`;\n","import styled from 'styled-components';\nimport { StyledTextInput, ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nexport const EditContactForm = styled.form`\n  display: flex;\n  width: 100%;\n  justify-content: space-evenly;\n  align-items: center;\n  /* position: absolute;\n  left: 0;\n  top: -50%; */\n`;\nexport const EditInput = styled(StyledTextInput)`\n  width: 300px;\n  margin: 0;\n  margin-bottom: 0;\n`;\nexport const EditSubBtn = styled(ListBtn).attrs(props => ({\n  $padding: props.$padding || '0.3rem',\n}))`\n  background: rgb(131, 96, 195);\n  margin: 0;\n  padding: ${props => props.$padding};\n  color: black;\n  &:hover {\n    background: rgb(131, 96, 195);\n  }\n`;\nexport const CloseBtn = styled(EditSubBtn)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20px;\n  height: 20px;\n  color: white;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { selectItems } from 'redux/contacts/selectors';\nimport { updateContact } from 'redux/contacts/operationsWithBackend';\nimport { motion } from 'framer-motion';\nimport { EditContactForm, CloseBtn, EditSubBtn } from './EditContactStyled';\nimport { FavoriteCheckboxSecond, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { selectItemsContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\n\nconst EditContact = ({ handleChangeEditOpen, contactId }) => {\n  const contactsItems = useSelector(selectItemsContacts);\n  const dispatch = useDispatch();\n  const existingContact = contactsItems.find(el => el._id === contactId);\n\n  const validate = values => {\n    const errors = {};\n    // if (!values.name) {\n    //   errors.name = 'Required';\n    // } else\n    if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.contactName)) {\n      errors.contactName = 'Invalid name';\n    }\n\n    // if (!values.number) {\n    //   errors.number = 'Required';\n    // } else\n    if (\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n        values.phoneNumber\n      )\n    )\n      // {\n      //   errors.phoneNumber = 'Invalid number';\n      // }\n\n      return errors;\n  };\n\n  // const editFormik = useFormik({\n  //   initialValues: {\n  //     contactName: existingContact.contactName,\n  //     phoneNumber: existingContact.phoneNumber,\n  //   },\n  //   validate,\n  //   onSubmit: values => {\n  //     const updContact = {\n  //       id: contactId,\n  //       contactName: values.contactName,\n  //       phoneNumber: values.phoneNumber,\n  //     };\n\n  //     if (\n  //       contactsItems.some(el => {\n  //         return (\n  //           el.contactName.toLowerCase() === updContact.contactName.toLowerCase() &&\n  //           el.phoneNumber === updContact.phoneNumber\n  //         );\n  //       })\n  //     ) {\n  //       editFormik.handleReset();\n  //       return alert(`${updContact.contactName} is already in list!`);\n  //     }\n\n  //     dispatch(updateContact(updContact));\n  //     editFormik.handleReset();\n  //     handleChangeEditOpen();\n  //   },\n  // });\n\n  return (\n    <Formik\n      initialValues={{\n        id: contactId,\n        contactName: existingContact.contactName,\n        phoneNumber: existingContact.phoneNumber,\n        favorite: existingContact.favorite,\n      }}\n      validate={validate}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        // const updContact = {\n        //   id: contactId,\n        //   contactName: values.contactName,\n        //   phoneNumber: values.phoneNumber,\n        //   favorite: values.favorite,\n        // };\n\n        if (\n          contactsItems.some(el => {\n            return (\n              // el.contactName.toLowerCase() === updContact.contactName.toLowerCase() &&\n              // el.phoneNumber === updContact.phoneNumber\n              el.contactName.toLowerCase() === values.contactName.toLowerCase() &&\n              el.phoneNumber === values.phoneNumber &&\n              el.favorite === values.favorite\n            );\n          })\n        ) {\n          //  editFormik.handleReset();\n          resetForm();\n          // return alert(`${updContact.contactName} is already in list!`);\n          return alert(`You haven't changed anything!`);\n        }\n        console.log('values', values);\n        // dispatch(updateContact(updContact));\n        dispatch(updateContact(values));\n        //  editFormik.handleReset();\n        handleChangeEditOpen();\n        setSubmitting(false);\n      }}\n    >\n      {({ handleSubmit, isSubmitting }) => (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          style={{\n            position: 'absolute',\n            left: '0',\n            top: '-90%',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: '8px',\n            // background: 'rgb(46, 191, 145)',\n            background: 'linear-gradient(310deg, rgb(46, 191, 145), rgb(131, 96, 195))',\n          }}\n        >\n          <EditContactForm onSubmit={handleSubmit}>\n            <NameInput\n              id=\"contactName\"\n              name=\"contactName\"\n              type=\"text\"\n              placeholder=\"Enter new name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              $width=\"300px\"\n              $margin=\"0\"\n              $marginBottom=\"0\"\n            />\n            <NameInput\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              type=\"tel\"\n              placeholder=\"Enter new number\"\n              title=\"Phone number may contains \\'+\\' and numbers\"\n              $width=\"300px\"\n              $margin=\"0\"\n              $marginBottom=\"0\"\n            />\n            <FavoriteCheckboxSecond name={'favorite'} />\n            <EditSubBtn $padding={'5px'} type=\"submit\" disabled={isSubmitting}>\n              Change\n            </EditSubBtn>\n            <CloseBtn type=\"button\" onClick={handleChangeEditOpen}>\n              X\n            </CloseBtn>\n          </EditContactForm>\n        </motion.div>\n      )}\n    </Formik>\n\n    // Old code on 'useFormik'\n    // <motion.div\n    //   initial={{ opacity: 0 }}\n    //   animate={{ opacity: 1 }}\n    //   exit={{ opacity: 0 }}\n    //   style={{\n    //     position: 'absolute',\n    //     left: '0',\n    //     top: '-90%',\n    //     width: '100%',\n    //     height: '100%',\n    //     display: 'flex',\n    //     alignItems: 'center',\n    //     borderRadius: '8px',\n    //     // background: 'rgb(46, 191, 145)',\n    //     background: 'linear-gradient(310deg, rgb(46, 191, 145), rgb(131, 96, 195))',\n    //   }}\n    // >\n    //   <EditContactForm onSubmit={editFormik.handleSubmit}>\n    //     <EditInput\n    //       id=\"contactName\"\n    //       name=\"contactName\"\n    //       type=\"text\"\n    //       title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    //       onChange={editFormik.handleChange}\n    //       onBlur={editFormik.handleBlur}\n    //       value={editFormik.values.contactName}\n    //       $formadd=\"300px\"\n    //       placeholder=\"Enter new name\"\n    //     />\n    //     <EditInput\n    //       id=\"phoneNumber\"\n    //       name=\"phoneNumber\"\n    //       type=\"tel\"\n    //       title=\"Phone number may contains \\'+\\' and numbers\"\n    //       onChange={editFormik.handleChange}\n    //       onBlur={editFormik.handleBlur}\n    //       value={editFormik.values.phoneNumber}\n    //       $formadd=\"300px\"\n    //       placeholder=\"Enter new number\"\n    //     />\n    //     {editFormik.touched.phoneNumber && editFormik.errors.phoneNumber ? (\n    //       <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n    //         <ErrorDiv>{editFormik.errors.phoneNumber}</ErrorDiv>\n    //       </motion.div>\n    //     ) : null}\n    //     <EditSubBtn $padding={'5px'} type=\"submit\">\n    //       Change\n    //     </EditSubBtn>\n    //     <CloseBtn type=\"button\" onClick={handleChangeEditOpen}>\n    //       X\n    //     </CloseBtn>\n    //   </EditContactForm>\n    // </motion.div>\n  );\n};\n\nexport default EditContact;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactWB } from 'redux/contacts/operationsWithBackend';\n// import { selectIsLoading } from 'redux/contacts/selectors';\nimport { PhoneBookListItem, NameSpan, TelSpan, DoubleDotSpan } from './PhoneBookListItemStyled';\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport EditContact from 'components/EditContact/EditContact';\nimport { MdFavoriteBorder, MdFavorite } from 'react-icons/md';\nimport { useState } from 'react';\nimport { selectIsLoadingContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\n\nfunction BookItem({ contactName, phoneNumber, id, favorite }) {\n  const dispatch = useDispatch();\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const handleChangeEditOpen = () => {\n    setIsEditOpen(prevState => !prevState);\n  };\n  // const isDeleting = useSelector(selectIsLoading);\n  const isDeleting = useSelector(selectIsLoadingContacts);\n\n  return (\n    <PhoneBookListItem>\n      <NameSpan>{contactName}</NameSpan> <DoubleDotSpan>:</DoubleDotSpan>{' '}\n      <TelSpan>{phoneNumber}</TelSpan>\n      {favorite ? <MdFavorite /> : <MdFavoriteBorder />}\n      <ListBtn type=\"button\" onClick={handleChangeEditOpen}>\n        Edit\n      </ListBtn>\n      <ListBtn type=\"button\" onClick={() => dispatch(deleteContactWB(id))}>\n        {isDeleting ? 'Deleting' : 'Delete'}\n      </ListBtn>\n      {isEditOpen && <EditContact handleChangeEditOpen={handleChangeEditOpen} contactId={id} />}\n    </PhoneBookListItem>\n  );\n}\n\nBookItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default BookItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsWB } from 'redux/contacts/operationsWithBackend';\n// import {\n//   selectFilter,\n//   selectIsErrorPhoneBook,\n//   selectIsLoading,\n//   selectItems,\n// } from 'redux/contacts/selectors';\nimport { motion } from 'framer-motion';\nimport { ListContacts, LoadingMessage, ErrorSpanStyled } from './PhoneBookListStyled';\nimport BookItem from 'components/PhoneBookListItem/PhoneBookListItem';\nimport {\n  selectFilterContacts,\n  selectIsErrorContacts,\n  selectIsLoadingContacts,\n  selectItemsContacts,\n} from 'redux/authAndContactsSlice/authAndContactsSelectors';\n\nfunction PhoneBookList() {\n  // const contactsItemsRedux = useSelector(selectItems);\n  const contactsItemsRedux = useSelector(selectItemsContacts);\n  // const isLoadingRedux = useSelector(selectIsLoading);\n  const isLoadingRedux = useSelector(selectIsLoadingContacts);\n  // const isErrorReduxPhoneBook = useSelector(selectIsErrorPhoneBook);\n  const isErrorReduxPhoneBook = useSelector(selectIsErrorContacts);\n  const dispatch = useDispatch();\n\n  // const filter = useSelector(selectFilter);\n  const filter = useSelector(selectFilterContacts);\n\n  const filteredArray = contactsItemsRedux.filter(el =>\n    el.contactName.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContactsWB());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isErrorReduxPhoneBook && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <ErrorSpanStyled>Some error hapenned: {isErrorReduxPhoneBook}</ErrorSpanStyled>\n          {/* Here I show an error message for the user - I think this is not necessary. Need to hide it, and show only notification?.. */}\n        </motion.div>\n      )}\n      {isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <LoadingMessage>Loading contacts...</LoadingMessage>\n        </motion.div>\n      )}\n      {!isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          {contactsItemsRedux.length ? (\n            <>\n              <ListContacts>\n                {filteredArray.map(({ contactName, _id, phoneNumber, favorite }) => {\n                  return (\n                    <BookItem\n                      key={_id}\n                      contactName={contactName}\n                      phoneNumber={phoneNumber}\n                      id={_id}\n                      favorite={favorite}\n                    />\n                  );\n                })}\n              </ListContacts>\n            </>\n          ) : (\n            <p>Your list of contacts is empty!</p>\n          )}\n        </motion.div>\n      )}\n    </>\n  );\n}\n\nexport default PhoneBookList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0.5rem;\n`;\nexport const ListContacts = styled.ul`\n  position: relative;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 18px;\n  list-style: disc;\n`;\nexport const LoadingMessage = styled.p`\n  background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n`;\n\nexport const ErrorSpanStyled = styled.span`\n  color: rgb(189, 4, 75);\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { selectItems } from 'redux/contacts/selectors';\nimport { addContactWB } from 'redux/contacts/operationsWithBackend';\nimport { BookForm, AddBtn, Div, FavoriteCheckboxSecond, NameInput } from './PhoneBookFormStyled';\nimport { selectItemsContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\n\nfunction PhoneBookForm() {\n  // const contactsItems = useSelector(selectItems);\n  const contactsItems = useSelector(selectItemsContacts);\n  const dispatch = useDispatch();\n\n  const validate = values => {\n    const errors = {};\n    if (!values.contactName) {\n      errors.contactName = 'Required';\n    } else if (\n      !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.contactName)\n    ) {\n      errors.contactName = 'Invalid contactName';\n    }\n\n    if (!values.phoneNumber) {\n      errors.phoneNumber = 'Required';\n    } else if (\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n        values.phoneNumber\n      )\n    ) {\n      errors.phoneNumber = 'Invalid phoneNumber';\n    }\n\n    return errors;\n  };\n\n  // const formik = useFormik({\n  //   initialValues: { contactName: '', phoneNumber: '', favorite: isChecked },\n  //   validate,\n  //   onSubmit: values => {\n  //     const newContact = {\n  //       contactName: values.contactName,\n  //       phoneNumber: values.phoneNumber,\n  //       favorite: values.favorite,\n  //     };\n\n  //     if (\n  //       contactsItems.some(el => {\n  //         return el.contactName.toLowerCase().includes(newContact.contactName.toLowerCase());\n  //       })\n  //     ) {\n  //       formik.handleReset();\n  //       return alert(`${newContact.contactName} is already in list!`);\n  //     }\n\n  //     dispatch(addContactWB(newContact));\n  //     formik.handleReset();\n  //   },\n  // });\n\n  return (\n    <Formik\n      initialValues={{ contactName: '', phoneNumber: '', favorite: false }}\n      validate={validate}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        const newContact = {\n          contactName: values.contactName,\n          phoneNumber: values.phoneNumber,\n          favorite: values.favorite,\n        };\n\n        if (\n          contactsItems.some(el => {\n            return el.contactName.toLowerCase().includes(newContact.contactName.toLowerCase());\n          })\n        ) {\n          // formik.handleReset();\n          resetForm();\n          return alert(`${newContact.contactName} is already in list!`);\n        }\n        setSubmitting(false);\n        dispatch(addContactWB(newContact));\n        resetForm();\n      }}\n    >\n      {({ handleSubmit, isSubmitting }) => (\n        <BookForm onSubmit={handleSubmit}>\n          <Div>\n            {/* <Label htmlFor=\"contactName\">Name</Label>\n            <Field\n              id=\"contactName\"\n              name=\"contactName\"\n              type=\"text\"\n              title=\"Name of contact may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"Enter the contact name\"\n              component={StyledTextInput}\n            />\n            <ErrorMessage name=\"contactName\">{msg => <ErrorDiv>{msg}</ErrorDiv>}</ErrorMessage> */}\n\n            <NameInput\n              label=\"Contact name\"\n              id=\"contactName\"\n              name=\"contactName\"\n              title=\"Name of contact may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"Enter the contact name\"\n              $marginBottom=\"0.5rem\"\n            />\n\n            <NameInput\n              label=\"Phone number\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              title=\"Phone number may contains \\'+\\' and numbers\"\n              placeholder=\"Enter the contact phone number\"\n              $marginBottom=\"0.5rem\"\n            />\n\n            {/* <Label htmlFor=\"phoneNumber\">Phone number</Label>\n            <Field\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              type=\"text\"\n              title=\"Phone number may contains \\'+\\' and numbers\"\n              placeholder=\"Enter the contact phone number\"\n              component={TelInput}\n            />\n            <ErrorMessage name=\"phoneNumber\">{msg => <ErrorDiv>{msg}</ErrorDiv>}</ErrorMessage> */}\n\n            <FavoriteCheckboxSecond name={'favorite'}>Favorite</FavoriteCheckboxSecond>\n\n            {/* <Label htmlFor=\"favorite\" $disFlex=\"flex\" $jusCon=\"space-between\">\n              Favorite{values.favorite ? <MdFavorite /> : <MdFavoriteBorder />}\n              <Field type=\"checkbox\" name=\"favorite\" id=\"favorite\" component={FavoriteCheckbox} />\n            </Label> */}\n\n            <AddBtn type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </AddBtn>\n            {/* The old code */}\n            {/* <NameInput\n            id=\"name\"\n            name=\"contactName\"\n            type=\"text\"\n            title=\"ContactName may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.contactName}\n            $formadd=\"300px\"\n          />\n          {formik.touched.contactName && formik.errors.contactName ? (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <ErrorDiv>{formik.errors.contactName}</ErrorDiv>\n            </motion.div>\n          ) : null} */}\n            {/* <TelInput\n            id=\"number\"\n            name=\"phoneNumber\"\n            type=\"tel\"\n            title=\"Phone number may contains \\'+\\' and numbers\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.phoneNumber}\n            $formadd=\"300px\"\n          />\n          {formik.touched.phoneNumber && formik.errors.phoneNumber ? (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <ErrorDiv>{formik.errors.phoneNumber}</ErrorDiv>\n            </motion.div>\n          ) : null} */}\n            {/* <FavoriteCheckbox\n          id=\"favorite\"\n          name=\"favorite\"\n          type=\"checkbox\"\n          title=\"Favorite contact?\"\n          checked={isChecked}\n          // required\n          onChange={handleCheckbox}\n          // onBlur={formik.handleBlur}\n          // value={formik.values.favorite}\n          // $formadd=\"100%\"\n        /> */}\n          </Div>\n        </BookForm>\n      )}\n    </Formik>\n  );\n}\n\nexport default PhoneBookForm;\n","import styled from 'styled-components';\n\nexport const WrapperForContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 0.5rem;\n`;\nexport const AddDiv = styled.div`\n  width: 400px;\n  padding: 5px;\n`;\nexport const FilterListDiv = styled.div`\n  flex-grow: 2;\n`;\nexport const MainTitle = styled.h1`\n  margin: 0.2rem;\n`;\n","import PhoneBookForm from 'components/PhoneBookForm/PhoneBookFormik';\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\nimport Filter from 'components/Filter/Filter';\nimport { AddDiv, FilterListDiv, MainTitle, WrapperForContent } from 'components/AppStyled';\nimport { Title } from 'components/PhoneBookList/PhoneBookListStyled';\nimport { motion } from 'framer-motion';\n\nfunction HomePage() {\n  return (\n    <>\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <MainTitle>Phonebook</MainTitle>\n        <WrapperForContent>\n          <AddDiv>\n            <Title>Add contact</Title>\n            <PhoneBookForm />\n          </AddDiv>\n          <FilterListDiv>\n            <Title>Contacts</Title>\n            <Filter />\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <PhoneBookList />\n            </motion.div>\n          </FilterListDiv>\n        </WrapperForContent>\n      </motion.div>\n    </>\n  );\n}\nexport default HomePage;\n"],"names":["filterValue","useSelector","selectFilterContacts","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Paragraph","StyledTextInput","onChange","evt","changeFilterUnited","target","value","toLowerCase","trim","placeholder","$width","$margin","$marginTop","$marginBottom","PhoneBookListItem","styled","_templateObject","_taggedTemplateLiteral","NameSpan","_templateObject2","TelSpan","_templateObject3","DoubleDotSpan","_templateObject4","EditContactForm","EditSubBtn","ListBtn","attrs","props","$padding","CloseBtn","_ref","handleChangeEditOpen","contactId","contactsItems","selectItemsContacts","existingContact","find","el","_id","Formik","initialValues","id","contactName","phoneNumber","favorite","validate","values","errors","test","onSubmit","_ref2","setSubmitting","resetForm","some","alert","console","log","updateContact","_ref3","handleSubmit","isSubmitting","motion","initial","opacity","animate","exit","style","position","left","top","width","height","display","alignItems","borderRadius","background","NameInput","name","type","title","FavoriteCheckboxSecond","disabled","onClick","_useState","useState","_useState2","_slicedToArray","isEditOpen","setIsEditOpen","prevState","isDeleting","selectIsLoadingContacts","MdFavorite","MdFavoriteBorder","deleteContactWB","EditContact","contactsItemsRedux","isLoadingRedux","isErrorReduxPhoneBook","selectIsErrorContacts","filter","filteredArray","includes","useEffect","fetchContactsWB","ErrorSpanStyled","LoadingMessage","length","ListContacts","map","BookItem","Title","newContact","concat","addContactWB","BookForm","Div","label","AddBtn","WrapperForContent","AddDiv","FilterListDiv","MainTitle","PhoneBookForm","Filter","PhoneBookList"],"sourceRoot":""}