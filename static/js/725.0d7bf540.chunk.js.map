{"version":3,"file":"static/js/725.0d7bf540.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.21\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return false;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n    return true;\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.21\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.21 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            const newValues = checkTargetForNewValues(this, target, origin);\n            // If new values have been added, for instance named color values, transform these\n            if (transformValues && newValues) {\n                origin = transformValues(origin);\n            }\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","keys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","push","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}