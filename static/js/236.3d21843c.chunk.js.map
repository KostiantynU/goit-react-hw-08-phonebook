{"version":3,"file":"static/js/236.3d21843c.chunk.js","mappings":"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","sources":["components/LogInForm/LogInFormStyled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nexport const LogInFormStyled = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n","import { useFormik } from 'formik';\nimport { register } from 'redux/auth/operations';\nimport { motion } from 'framer-motion';\nimport { AddBtn, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { LogInFormStyled } from 'components/LogInForm/LogInFormStyled';\nimport { useDispatch } from 'react-redux';\n\nconst RegisterFormStyled = () => {\n  const dispatch = useDispatch();\n  const validate = values => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email';\n    }\n\n    if (!values.password) {\n      errors.password = 'Required';\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/i.test(values.password)) {\n      errors.password = 'Invalid password';\n    }\n\n    if (!values.name) {\n      errors.name = 'Required';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      name: '',\n    },\n    validate,\n    onSubmit: values => {\n      const newUser = { ...values };\n      dispatch(register(newUser));\n      formik.handleReset();\n    },\n  });\n\n  return (\n    <LogInFormStyled onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"name\">Enter your name</label>\n      <NameInput type=\"text\" name=\"name\" {...formik.getFieldProps('name')} formadd=\"400px\" />\n      {formik.touched.name && formik.errors.name ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.name}</div>\n        </motion.div>\n      ) : null}\n\n      <label htmlFor=\"email\">Enter your e-mail</label>\n      <NameInput type=\"email\" name=\"email\" {...formik.getFieldProps('email')} formadd=\"400px\" />\n      {formik.touched.email && formik.errors.email ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.email}</div>\n        </motion.div>\n      ) : null}\n\n      <label htmlFor=\"password\">Enter password</label>\n      <NameInput\n        type=\"password\"\n        name=\"password\"\n        {...formik.getFieldProps('password')}\n        formadd=\"400px\"\n      />\n      {formik.touched.password && formik.errors.password ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.password}</div>\n        </motion.div>\n      ) : null}\n\n      <AddBtn type=\"submit\" padding=\"10px 15px\">\n        Register!\n      </AddBtn>\n    </LogInFormStyled>\n  );\n};\n\n// this is for create pass (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")\n// this is for create pass, less difficulty (\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\")\n\nexport default RegisterFormStyled;\n","import RegisterFormStyled from 'components/RegisterForm/RegisterForm';\nimport { StyledNavLink } from 'components/SharedLayout/AppBarStyled';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterFormStyled />\n      <StyledNavLink to=\"/login\" marginleft=\"auto\" marginright=\"auto\" width=\"120px\">\n        Or logIn!\n      </StyledNavLink>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["LogInFormStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","formik","useFormik","initialValues","email","password","name","validate","values","errors","test","onSubmit","newUser","_objectSpread","register","handleReset","_jsxs","handleSubmit","children","_jsx","htmlFor","NameInput","type","getFieldProps","formadd","touched","motion","initial","opacity","animate","exit","AddBtn","padding","_Fragment","RegisterFormStyled","StyledNavLink","to","marginleft","marginright","width"],"sourceRoot":""}