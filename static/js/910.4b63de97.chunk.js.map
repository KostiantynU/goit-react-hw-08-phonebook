{"version":3,"file":"static/js/910.4b63de97.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/PhoneBookListItem/PhoneBookListItemStyled.js","components/EditContact/EditContactStyled.js","components/EditContact/EditContact.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookList/PhoneBookListStyled.js","pages/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/contactsSliceWB';\nimport { SearchInput, Paragraph } from '../PhoneBookForm/PhoneBookFormStyled';\n\nfunction Filter() {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Paragraph>Find contacts by name</Paragraph>\n      <SearchInput\n        onChange={evt => dispatch(changeFilter(evt.target.value.toLowerCase().trim()))}\n        value={filterValue}\n        $formadd=\"90%\"\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nexport const PhoneBookListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.2rem;\n  margin: 0.2rem;\n  border: 1px solid rgb(46, 191, 145);\n  border-radius: 8px;\n\n  &:hover {\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n  }\n  /* overflow: hidden;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%) translateX(-110%) skew(-30deg);\n    width: 120%;\n    height: 120%;\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n    transition: 500ms;\n    pointer-events: none;\n  }\n  &:hover::after {\n    transform: translateY(-50%) translateX(-8%) skew(-30deg);\n  } */\n`;\nexport const NameSpan = styled.span`\n  font-weight: 600;\n`;\nexport const TelSpan = styled(NameSpan)`\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\nimport { NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nexport const EditContactForm = styled.form`\n  display: flex;\n  position: absolute;\n  left: 0;\n  top: -15%;\n`;\nexport const EditInput = styled(NameInput)`\n  width: 100%;\n`;\n","// import { motion } from 'framer-motion';\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { EditContactForm, EditInput } from './EditContactStyled';\n\nconst EditContact = () => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n  };\n  return (\n    <>\n      {/* <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        style={{ postition: 'absolute' }}\n      > */}\n      <EditContactForm onSubmit={handleSubmit}>\n        <EditInput type=\"text\" name=\"number\" $margin={'0'} $marginBottom={'0.1rem'} />\n        <ListBtn $padding={'5px'}>Change</ListBtn>\n      </EditContactForm>\n      {/* </motion.div> */}\n    </>\n  );\n};\n\nexport default EditContact;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactWB } from 'redux/contacts/operationsWithBackend';\nimport { selectIsLoading, selectIdEditForm } from 'redux/contacts/selectors';\nimport { changeEditOpen, changeIdEditForm } from 'redux/contacts/contactsSliceWB';\nimport { selectEditOpen } from 'redux/contacts/selectors';\nimport { PhoneBookListItem, NameSpan, TelSpan } from './PhoneBookListItemStyled';\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport EditContact from 'components/EditContact/EditContact';\n\nfunction BookItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const isEditOpen = useSelector(selectEditOpen);\n  const idEditOpen = useSelector(selectIdEditForm);\n  const handleChangeEditOpen = evt => {\n    dispatch(changeIdEditForm(evt.target.dataset.id));\n    dispatch(changeEditOpen());\n  };\n  const isDeleting = useSelector(selectIsLoading);\n  const shouldEditOpens = isEditOpen && idEditOpen;\n\n  return (\n    <PhoneBookListItem>\n      <NameSpan>{name} :</NameSpan> <TelSpan>{number}</TelSpan>\n      <ListBtn type=\"button\" onClick={handleChangeEditOpen} data-id={id}>\n        Edit\n      </ListBtn>\n      <ListBtn type=\"button\" onClick={() => dispatch(deleteContactWB(id))}>\n        {isDeleting ? 'Deleting' : 'Delete'}\n      </ListBtn>\n      {shouldEditOpens && <EditContact data-id={id} />}\n    </PhoneBookListItem>\n  );\n}\n\nBookItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default BookItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsWB } from 'redux/contacts/operationsWithBackend';\nimport {\n  selectFilter,\n  selectIsError,\n  selectIsLoading,\n  selectItems,\n} from 'redux/contacts/selectors';\nimport { motion } from 'framer-motion';\nimport { ListContacts, LoadingMessage } from './PhoneBookListStyled';\nimport BookItem from 'components/PhoneBookListItem/PhoneBookListItem';\n// import EditContact from 'components/EditContact/EditContact';\n\nfunction PhoneBookList() {\n  const contactsItemsRedux = useSelector(selectItems);\n  const isLoadingRedux = useSelector(selectIsLoading);\n  const isErrorRedux = useSelector(selectIsError);\n  // const isEditOpen = useSelector(selectEditOpen);\n\n  const filter = useSelector(selectFilter);\n\n  const filteredArray = contactsItemsRedux.filter(el => el.name.toLowerCase().includes(filter));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsWB());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isErrorRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <p>Some error hapenned: {isErrorRedux}</p>\n        </motion.div>\n      )}\n      {isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <LoadingMessage>Loading contacts...</LoadingMessage>\n        </motion.div>\n      )}\n      {!isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          {contactsItemsRedux.length ? (\n            <>\n              <ListContacts>\n                {filteredArray.map(({ name, id, number }) => {\n                  return <BookItem key={id} name={name} number={number} id={id} />;\n                })}\n              </ListContacts>\n            </>\n          ) : (\n            <p>Your list of contacts is empty!</p>\n          )}\n        </motion.div>\n      )}\n    </>\n  );\n}\n\nexport default PhoneBookList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0.5rem;\n`;\nexport const ListContacts = styled.ul`\n  position: relative;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 18px;\n  list-style: disc;\n`;\nexport const LoadingMessage = styled.p`\n  background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n`;\n","import Filter from 'components/Filter/Filter';\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\nfunction Contacts() {\n  return (\n    <>\n      <Filter />\n      <PhoneBookList />\n    </>\n  );\n}\nexport default Contacts;\n","export const selectFilter = state => state.contacts.filter;\nexport const selectItems = state => state.contacts.phonebook.items;\nexport const selectIsError = state => state.contacts.phonebook.isError;\nexport const selectIsLoading = state => state.contacts.phonebook.selectIsLoading;\nexport const selectEditOpen = state => state.contacts.isEditOpen;\nexport const selectIdEditForm = state => state.contacts.idEditForm;\n"],"names":["filterValue","useSelector","selectFilter","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Paragraph","SearchInput","onChange","evt","changeFilter","target","value","toLowerCase","trim","$formadd","PhoneBookListItem","styled","_templateObject","_taggedTemplateLiteral","NameSpan","_templateObject2","TelSpan","_templateObject3","EditContactForm","EditInput","NameInput","onSubmit","preventDefault","type","name","$margin","$marginBottom","ListBtn","$padding","_ref","number","id","isEditOpen","selectEditOpen","idEditOpen","selectIdEditForm","isDeleting","selectIsLoading","shouldEditOpens","onClick","changeIdEditForm","dataset","changeEditOpen","deleteContactWB","EditContact","contactsItemsRedux","selectItems","isLoadingRedux","isErrorRedux","selectIsError","filter","filteredArray","el","includes","useEffect","fetchContactsWB","motion","initial","opacity","animate","exit","LoadingMessage","length","ListContacts","map","BookItem","Title","Filter","PhoneBookList","state","contacts","phonebook","items","isError","idEditForm"],"sourceRoot":""}