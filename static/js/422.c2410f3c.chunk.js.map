{"version":3,"file":"static/js/422.c2410f3c.chunk.js","mappings":"gLACaA,E,QAAkBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4I,8ICiH1C,MA5GA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAoCjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,UAAW,GACXC,aAAc,IAEhBC,SAxCa,SAAAC,GACf,IAAMC,EAAS,CAAC,EAiBhB,OAhBKD,EAAOH,UAEA,4CAA4CK,KAAKF,EAAOH,aAClEI,EAAOJ,UAAY,iBAFnBI,EAAOJ,UAAY,oBAKhBG,EAAOF,eACVG,EAAOH,aAAe,wBASjBG,CACT,EAsBIE,SAAU,SAACH,EAAMI,GAAoC,IAAhCC,EAAaD,EAAbC,cAAeC,EAASF,EAATE,UAClCD,GAAc,GACd,IAAME,GAAOC,EAAAA,EAAAA,GAAA,GAAQR,GACrBR,GAASiB,EAAAA,EAAAA,IAAMF,IACfF,GAAc,GACdC,GACF,EAAEI,SAED,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aAAY,OAC5BC,EAAAA,EAAAA,MAAC1B,EAAAA,EAAe,CAACe,SAAUS,EAAaF,SAAA,EACtChB,EAAAA,EAAAA,KAACqB,EAAAA,GAAS,CACRC,GAAG,YACHC,KAAK,QACLC,KAAK,YACLC,MAAM,eACNC,YAAY,yBAEd1B,EAAAA,EAAAA,KAACqB,EAAAA,GAAS,CACRC,GAAG,eACHC,KAAK,WACLC,KAAK,eACLC,MAAM,iBACNC,YAAY,oBAEd1B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAACJ,KAAK,SAASK,SAAS,YAAYC,SAAUV,EAAaH,SAAC,aAGnD,GAmC1B,ECxGA,MAPA,WACE,OACEhB,EAAAA,EAAAA,KAAA8B,EAAAA,SAAA,CAAAd,UACEhB,EAAAA,EAAAA,KAAC+B,EAAS,KAGhB,C","sources":["components/LogInForm/LogInFormStyled.js","components/LogInForm/LogInForm.jsx","pages/LogInPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nexport const LogInFormStyled = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n","import { Formik } from 'formik';\nimport { logIn } from 'redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport { AddBtn, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { LogInFormStyled } from './LogInFormStyled';\n\nfunction LogInForm() {\n  const dispatch = useDispatch();\n\n  const validate = values => {\n    const errors = {};\n    if (!values.userEmail) {\n      errors.userEmail = 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.userEmail)) {\n      errors.userEmail = 'Invalid email';\n    }\n\n    if (!values.userPassword) {\n      errors.userPassword = 'Password is required';\n    }\n    //   if (\n    //   !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/i.test(values.password)\n    // )\n    // else {\n    //   errors.password = 'Invalid password';\n    // }\n\n    return errors;\n  };\n\n  // const formik = useFormik({\n  // initialValues: {\n  //   userEmail: '',\n  //   userPassword: '',\n  // },\n  // validate,\n  // onSubmit: values => {\n  //   const logUser = { ...values };\n  //   dispatch(logIn(logUser));\n  //   formik.handleReset();\n  // },\n  // });\n\n  return (\n    <Formik\n      initialValues={{\n        userEmail: '',\n        userPassword: '',\n      }}\n      validate={validate}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        const logUser = { ...values };\n        dispatch(logIn(logUser));\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      {({ handleSubmit, isSubmitting }) => (\n        <LogInFormStyled onSubmit={handleSubmit}>\n          <NameInput\n            id=\"userEmail\"\n            type=\"email\"\n            name=\"userEmail\"\n            label=\"Enter e-mail\"\n            placeholder=\"example@example.com\"\n          />\n          <NameInput\n            id=\"userPassword\"\n            type=\"password\"\n            name=\"userPassword\"\n            label=\"Enter password\"\n            placeholder=\"Enter password\"\n          />\n          <AddBtn type=\"submit\" $padding=\"10px 15px\" disabled={isSubmitting}>\n            LogIn!\n          </AddBtn>\n        </LogInFormStyled>\n      )}\n    </Formik>\n    // <LogInFormStyled onSubmit={formik.handleSubmit}>\n    //   <label htmlFor=\"userEmail\">Enter your e-mail</label>\n    //   <StyledTextInput\n    //     type=\"email\"\n    //     name=\"userEmail\"\n    //     {...formik.getFieldProps('userEmail')}\n    //     $formadd=\"400px\"\n    //   />\n    //   {formik.touched.userEmail && formik.errors.userEmail ? (\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n    //       <div>{formik.errors.userEmail}</div>\n    //     </motion.div>\n    //   ) : null}\n\n    //   <label htmlFor=\"userPassword\">Enter password</label>\n    //   <StyledTextInput\n    // type=\"password\"\n    // name=\"userPassword\"\n    // {...formik.getFieldProps('userPassword')}\n    // $formadd=\"400px\"\n    //   />\n    //   {formik.touched.userPassword && formik.errors.userPassword ? (\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n    //       <div>{formik.errors.userPassword}</div>\n    //     </motion.div>\n    //   ) : null}\n\n    //   <AddBtn type=\"submit\" $padding=\"10px 15px\">\n    //     LogIn!\n    //   </AddBtn>\n    // </LogInFormStyled>\n  );\n}\n\nexport default LogInForm;\n// this is for create pass (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")\n// this is for create pass, less difficulty (\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\")\n","import LogInForm from 'components/LogInForm/LogInForm';\nfunction LogInPage() {\n  return (\n    <>\n      <LogInForm />\n    </>\n  );\n}\nexport default LogInPage;\n"],"names":["LogInFormStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_jsx","Formik","initialValues","userEmail","userPassword","validate","values","errors","test","onSubmit","_ref","setSubmitting","resetForm","logUser","_objectSpread","logIn","children","_ref2","handleSubmit","isSubmitting","_jsxs","NameInput","id","type","name","label","placeholder","AddBtn","$padding","disabled","_Fragment","LogInForm"],"sourceRoot":""}