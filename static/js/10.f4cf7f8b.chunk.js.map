{"version":3,"file":"static/js/10.f4cf7f8b.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/PhoneBookListItem/PhoneBookListItemStyled.js","components/EditContact/EditContactStyled.js","components/EditContact/EditContact.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookList/PhoneBookListStyled.js","components/PhoneBookForm/PhoneBookFormik.jsx","components/AppStyled.js","pages/HomePage.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/contactsSliceWB';\n// import { changeFilter } from 'redux/contacts/contactsSlice';\nimport { SearchInput, Paragraph } from '../PhoneBookForm/PhoneBookFormStyled';\n\nfunction Filter() {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Paragraph>Find contacts by name</Paragraph>\n      <SearchInput\n        onChange={evt => dispatch(changeFilter(evt.target.value.toLowerCase().trim()))}\n        value={filterValue}\n        formadd=\"90%\"\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nexport const PhoneBookListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.2rem;\n  margin: 0.2rem;\n  border: 1px solid rgb(46, 191, 145);\n  border-radius: 8px;\n  overflow: hidden;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%) translateX(-110%) skew(-30deg);\n    width: 120%;\n    height: 120%;\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n    transition: 500ms;\n    pointer-events: none;\n  }\n  &:hover::after {\n    transform: translateY(-50%) translateX(-8%) skew(-30deg);\n  }\n`;\nexport const NameSpan = styled.span`\n  font-weight: 600;\n`;\nexport const TelSpan = styled(NameSpan)`\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\nimport { NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nexport const EditContactForm = styled.form`\n  display: flex;\n  position: absolute;\n  left: 0;\n  top: -100%;\n`;\nexport const EditInput = styled(NameInput)`\n  width: 100%;\n`;\n","import { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { EditContactForm, EditInput } from './EditContactStyled';\n\nconst EditContact = () => {\n  return (\n    <>\n      <EditContactForm>\n        <EditInput type=\"text\" name=\"numberContact\" />\n        <ListBtn>Change</ListBtn>\n      </EditContactForm>\n    </>\n  );\n};\n\nexport default EditContact;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactWB } from 'redux/contacts/operationsWithBackend';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n// import { changeEditOpen } from 'redux/contactsSlice';\nimport { selectEditOpen } from 'redux/contacts/selectors';\nimport { PhoneBookListItem, NameSpan, TelSpan } from './PhoneBookListItemStyled';\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport EditContact from 'components/EditContact/EditContact';\n\nfunction BookItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const isEditOpen = useSelector(selectEditOpen);\n  // const handleChangeEditOpen = () => dispatch(changeEditOpen());\n  const isDeleting = useSelector(selectIsLoading);\n\n  return (\n    <PhoneBookListItem>\n      {isEditOpen && <EditContact />}\n      <NameSpan>{name} :</NameSpan> <TelSpan>{number}</TelSpan>\n      <ListBtn type=\"button\">Edit</ListBtn>\n      <ListBtn type=\"button\" onClick={() => dispatch(deleteContactWB(id))}>\n        {isDeleting ? 'Deleting' : 'Delete'}\n      </ListBtn>\n    </PhoneBookListItem>\n  );\n}\n\nBookItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default BookItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { getContacts } from 'redux/contacts/operations';\nimport { fetchContactsWB } from 'redux/contacts/operationsWithBackend';\nimport { selectContactsList, selectFilter } from 'redux/contacts/selectors';\nimport { ListContacts, LoadingMessage } from './PhoneBookListStyled';\nimport BookItem from 'components/PhoneBookListItem/PhoneBookListItem';\n// import { useGetContactsQuery } from 'redux/contacts/contactsQuery';\nimport { motion } from 'framer-motion';\n\nfunction PhoneBookList() {\n  // const {\n  //   data: contactsRTKQuery = [],\n  //   error: errorRTKQuery,\n  //   isFetching: isFetchingRTKQuery,\n  // } = useGetContactsQuery({\n  //   // skip: true, // pokemanName === \"\"\n  // });\n\n  const {\n    items: contactsItemsRedux = [],\n    isLoading: isLoadingRedux,\n    isError: errorRedux,\n  } = useSelector(selectContactsList);\n\n  const filter = useSelector(selectFilter);\n\n  const filteredArray = contactsItemsRedux.filter(el => el.name.toLowerCase().includes(filter));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsWB());\n  }, [dispatch]);\n\n  return (\n    <>\n      {errorRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <p>Some error hapenned: {errorRedux}</p>\n        </motion.div>\n      )}\n      {isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <LoadingMessage>Loading contacts...</LoadingMessage>\n        </motion.div>\n      )}\n      {!isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <ListContacts>\n            {filteredArray.map(({ name, id, number }) => {\n              return <BookItem key={id} name={name} number={number} id={id} />;\n            })}\n          </ListContacts>\n        </motion.div>\n      )}\n    </>\n  );\n}\n\nexport default PhoneBookList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0.5rem;\n`;\nexport const ListContacts = styled.ul`\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 18px;\n  list-style: disc;\n`;\nexport const LoadingMessage = styled.p`\n  background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContactWB } from 'redux/contacts/operationsWithBackend';\nimport { BookForm, NameInput, AddBtn, Label, Div, TelInput, ErrorDiv } from './PhoneBookFormStyled';\n\nfunction PhoneBookForm() {\n  const { items: contactsItems } = useSelector(selectContactsList);\n  const dispatch = useDispatch();\n\n  const validate = values => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = 'Required';\n    } else if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.name)) {\n      errors.name = 'Invalid name';\n    }\n\n    if (!values.number) {\n      errors.number = 'Required';\n    } else if (\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n        values.number\n      )\n    ) {\n      errors.number = 'Invalid number';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: { name: '', number: '' },\n    validate,\n    onSubmit: values => {\n      const newContact = {\n        name: values.name,\n        number: values.number,\n      };\n\n      if (\n        contactsItems.some(el => {\n          return el.name.toLowerCase().includes(newContact.name.toLowerCase());\n        })\n      ) {\n        formik.handleReset();\n        return alert(`${newContact.name} is already in list!`);\n      }\n\n      dispatch(addContactWB(newContact));\n      formik.handleReset();\n    },\n  });\n\n  return (\n    <BookForm onSubmit={formik.handleSubmit}>\n      <Div>\n        <Label htmlFor=\"name\">Name</Label>\n        <NameInput\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n          formadd=\"300px\"\n        />\n        {formik.touched.name && formik.errors.name ? (\n          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <ErrorDiv>{formik.errors.name}</ErrorDiv>\n          </motion.div>\n        ) : null}\n\n        <Label htmlFor=\"number\">Number</Label>\n        <TelInput\n          id=\"number\"\n          name=\"number\"\n          type=\"tel\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.number}\n          formadd=\"300px\"\n        />\n        {formik.touched.number && formik.errors.number ? (\n          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <ErrorDiv>{formik.errors.number}</ErrorDiv>\n          </motion.div>\n        ) : null}\n\n        <AddBtn type=\"submit\">Submit</AddBtn>\n      </Div>\n    </BookForm>\n  );\n}\n\nexport default PhoneBookForm;\n","import styled from 'styled-components';\n\nexport const WrapperForContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 0.5rem;\n`;\nexport const AddDiv = styled.div`\n  width: 400px;\n  padding: 5px;\n`;\nexport const FilterListDiv = styled.div`\n  flex-grow: 2;\n`;\nexport const MainTitle = styled.h1`\n  margin: 0.2rem;\n`;\n","import PhoneBookForm from 'components/PhoneBookForm/PhoneBookFormik';\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\nimport Filter from 'components/Filter/Filter';\nimport { AddDiv, FilterListDiv, MainTitle, WrapperForContent } from 'components/AppStyled';\nimport { Title } from 'components/PhoneBookList/PhoneBookListStyled';\nimport { motion } from 'framer-motion';\n\nfunction HomePage() {\n  return (\n    <>\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <MainTitle>Phonebook</MainTitle>\n        <WrapperForContent>\n          <AddDiv>\n            <Title>Add contact</Title>\n            <PhoneBookForm />\n          </AddDiv>\n          <FilterListDiv>\n            <Title>Contacts</Title>\n            <Filter />\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <PhoneBookList />\n            </motion.div>\n          </FilterListDiv>\n        </WrapperForContent>\n      </motion.div>\n    </>\n  );\n}\nexport default HomePage;\n","export const selectFilter = state => state.contacts.filter;\nexport const selectContactsList = state => state.contacts.phonebook;\nexport const selectEditOpen = state => state.contacts.isEditOpen;\nexport const selectIsLoading = state => state.contacts.phonebook.selectIsLoading;\n"],"names":["filterValue","useSelector","selectFilter","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Paragraph","SearchInput","onChange","evt","changeFilter","target","value","toLowerCase","trim","formadd","PhoneBookListItem","styled","_templateObject","_taggedTemplateLiteral","NameSpan","_templateObject2","TelSpan","_templateObject3","EditContactForm","EditInput","NameInput","type","name","ListBtn","_ref","number","id","isEditOpen","selectEditOpen","isDeleting","selectIsLoading","EditContact","onClick","deleteContactWB","_useSelector","selectContactsList","_useSelector$items","items","contactsItemsRedux","isLoadingRedux","isLoading","errorRedux","isError","filter","filteredArray","el","includes","useEffect","fetchContactsWB","motion","initial","opacity","animate","exit","LoadingMessage","ListContacts","map","BookItem","Title","contactsItems","formik","useFormik","initialValues","validate","values","errors","test","onSubmit","newContact","some","handleReset","alert","concat","addContactWB","BookForm","handleSubmit","Div","Label","htmlFor","title","required","handleChange","onBlur","handleBlur","touched","ErrorDiv","TelInput","AddBtn","WrapperForContent","AddDiv","FilterListDiv","MainTitle","_templateObject4","PhoneBookForm","Filter","PhoneBookList","state","contacts","phonebook"],"sourceRoot":""}