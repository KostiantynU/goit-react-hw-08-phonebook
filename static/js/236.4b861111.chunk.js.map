{"version":3,"file":"static/js/236.4b861111.chunk.js","mappings":"sLACaA,E,QAAkBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4I,8IC4I1C,EAvI2B,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAoCjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,UAAW,GACXC,aAAc,GACdC,SAAU,IAEZC,SA1Ca,SAAAC,GACf,IAAMC,EAAS,CAAC,EAiBhB,OAhBKD,EAAOJ,UAEA,4CAA4CM,KAAKF,EAAOJ,aAClEK,EAAOL,UAAY,iBAFnBK,EAAOL,UAAY,oBAKhBI,EAAOH,aAEA,+CAA+CK,KAAKF,EAAOH,gBACrEI,EAAOJ,aAAe,oBAFtBI,EAAOJ,aAAe,uBAKnBG,EAAOF,WACVG,EAAOH,SAAW,oBAGbG,CACT,EAwBIE,SAAU,SAACH,EAAMI,GAAoC,IAAhCC,EAAaD,EAAbC,cAAeC,EAASF,EAATE,UAClCD,GAAc,GACd,IAAME,GAAOC,EAAAA,EAAAA,GAAA,GAAQR,GACrBT,GAASkB,EAAAA,EAAAA,IAASF,IAClBF,GAAc,GACdC,GACF,EAAEI,SAED,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aAAY,OAC5BC,EAAAA,EAAAA,MAAC3B,EAAAA,EAAe,CAACgB,SAAUS,EAAaF,SAAA,EACtCjB,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,GAAG,WACHC,KAAK,OACLC,KAAK,WACLC,MAAM,kBACNC,YAAY,aACZC,cAAc,YAEhB5B,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,GAAG,YACHC,KAAK,QACLC,KAAK,YACLC,MAAM,oBACNC,YAAY,sBACZC,cAAc,YAEhB5B,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,GAAG,eACHC,KAAK,WACLC,KAAK,eACLC,MAAM,sBACNC,YAAY,iBACZC,cAAc,YAEhB5B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAACL,KAAK,SAASM,SAAS,YAAYC,SAAUX,EAAaH,SAAC,gBAGnD,GAgD1B,E,UC3HA,EAVqB,WACnB,OACEI,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAf,SAAA,EACEjB,EAAAA,EAAAA,KAACiC,EAAkB,KACnBjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAa,CAACC,GAAG,SAASC,WAAW,OAAOC,YAAY,OAAOC,MAAM,QAAOrB,SAAC,gBAKpF,C","sources":["components/LogInForm/LogInFormStyled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { styled } from 'styled-components';\r\nexport const LogInFormStyled = styled.form`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  align-items: center;\r\n`;\r\n","import { Formik } from 'formik';\r\nimport { register } from 'redux/auth/authOperations';\r\nimport { AddBtn, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\r\nimport { LogInFormStyled } from 'components/LogInForm/LogInFormStyled';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst RegisterFormStyled = () => {\r\n  const dispatch = useDispatch();\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.userEmail) {\r\n      errors.userEmail = 'Email is required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.userEmail)) {\r\n      errors.userEmail = 'Invalid email';\r\n    }\r\n\r\n    if (!values.userPassword) {\r\n      errors.userPassword = 'Password is required';\r\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/i.test(values.userPassword)) {\r\n      errors.userPassword = 'Invalid password';\r\n    }\r\n\r\n    if (!values.userName) {\r\n      errors.userName = 'Name is required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  // const formik = useFormik({\r\n  //   initialValues: {\r\n  //     userEmail: '',\r\n  //     userPassword: '',\r\n  //     userName: '',\r\n  //   },\r\n  //   validate,\r\n  //   onSubmit: values => {\r\n  //     const newUser = { ...values };\r\n  //     dispatch(register(newUser));\r\n  //     formik.handleReset();\r\n  //   },\r\n  // });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        userEmail: '',\r\n        userPassword: '',\r\n        userName: '',\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        setSubmitting(true);\r\n        const newUser = { ...values };\r\n        dispatch(register(newUser));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ handleSubmit, isSubmitting }) => (\r\n        <LogInFormStyled onSubmit={handleSubmit}>\r\n          <NameInput\r\n            id=\"userName\"\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            label=\"Enter your name\"\r\n            placeholder=\"Kostiantyn\"\r\n            $marginBottom=\"1.5rem\"\r\n          />\r\n          <NameInput\r\n            id=\"userEmail\"\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            label=\"Enter your e-mail\"\r\n            placeholder=\"example@example.com\"\r\n            $marginBottom=\"1.5rem\"\r\n          />\r\n          <NameInput\r\n            id=\"userPassword\"\r\n            type=\"password\"\r\n            name=\"userPassword\"\r\n            label=\"Enter your password\"\r\n            placeholder=\"Enter password\"\r\n            $marginBottom=\"1.5rem\"\r\n          />\r\n          <AddBtn type=\"submit\" $padding=\"10px 15px\" disabled={isSubmitting}>\r\n            Register!\r\n          </AddBtn>\r\n        </LogInFormStyled>\r\n      )}\r\n    </Formik>\r\n    // <LogInFormStyled onSubmit={formik.handleSubmit}>\r\n    //   <label htmlFor=\"userName\">Enter your name</label>\r\n    //   <StyledTextInput\r\n    //     type=\"text\"\r\n    //     name=\"userName\"\r\n    //     {...formik.getFieldProps('userName')}\r\n    //     $formadd=\"400px\"\r\n    //   />\r\n    //   {formik.touched.userName && formik.errors.userName ? (\r\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n    //       <div>{formik.errors.userName}</div>\r\n    //     </motion.div>\r\n    //   ) : null}\r\n\r\n    //   <label htmlFor=\"userEmail\">Enter your e-mail</label>\r\n    //   <StyledTextInput\r\n    //     type=\"email\"\r\n    //     name=\"userEmail\"\r\n    //     {...formik.getFieldProps('userEmail')}\r\n    //     $formadd=\"400px\"\r\n    //   />\r\n    //   {formik.touched.userEmail && formik.errors.userEmail ? (\r\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n    //       <div>{formik.errors.userEmail}</div>\r\n    //     </motion.div>\r\n    //   ) : null}\r\n\r\n    //   <label htmlFor=\"userPassword\">Enter password</label>\r\n    //   <StyledTextInput\r\n    //     type=\"password\"\r\n    //     name=\"userPassword\"\r\n    //     {...formik.getFieldProps('userPassword')}\r\n    //     $formadd=\"400px\"\r\n    //   />\r\n    //   {formik.touched.userPassword && formik.errors.userPassword ? (\r\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n    //       <div>{formik.errors.userPassword}</div>\r\n    //     </motion.div>\r\n    //   ) : null}\r\n\r\n    // <AddBtn type=\"submit\" $padding=\"10px 15px\">\r\n    //   Register!\r\n    // </AddBtn>\r\n    // </LogInFormStyled>\r\n  );\r\n};\r\n\r\n// this is for create pass (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")\r\n// this is for create pass, less difficulty (\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\")\r\n\r\nexport default RegisterFormStyled;\r\n","import RegisterFormStyled from 'components/RegisterForm/RegisterForm';\r\nimport { StyledNavLink } from 'components/SharedLayout/AppBarStyled';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <>\r\n      <RegisterFormStyled />\r\n      <StyledNavLink to=\"/login\" marginleft=\"auto\" marginright=\"auto\" width=\"120px\">\r\n        Or logIn!\r\n      </StyledNavLink>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n"],"names":["LogInFormStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_jsx","Formik","initialValues","userEmail","userPassword","userName","validate","values","errors","test","onSubmit","_ref","setSubmitting","resetForm","newUser","_objectSpread","register","children","_ref2","handleSubmit","isSubmitting","_jsxs","NameInput","id","type","name","label","placeholder","$marginBottom","AddBtn","$padding","disabled","_Fragment","RegisterFormStyled","StyledNavLink","to","marginleft","marginright","width"],"sourceRoot":""}