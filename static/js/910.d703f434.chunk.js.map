{"version":3,"file":"static/js/910.d703f434.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/PhoneBookListItem/PhoneBookListItemStyled.js","components/EditContact/EditContactStyled.js","components/EditContact/EditContact.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookList/PhoneBookListStyled.js","pages/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\n// import { selectFilter } from 'redux/contacts/selectors';\r\n// import { changeFilter } from 'redux/contacts/contactsSliceWB';\r\nimport { StyledTextInput, Paragraph } from '../PhoneBookForm/PhoneBookFormStyled';\r\nimport { selectFilterContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\r\nimport { changeFilterUnited } from 'redux/authAndContactsSlice/authAndContactsSlice';\r\n\r\nfunction Filter() {\r\n  // const filterValue = useSelector(selectFilter);\r\n  const filterValue = useSelector(selectFilterContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Paragraph>Find contacts by name</Paragraph>\r\n      <StyledTextInput\r\n        onChange={evt => dispatch(changeFilterUnited(evt.target.value.toLowerCase().trim()))}\r\n        value={filterValue}\r\n        placeholder=\"Enter the contact name\"\r\n        $width=\"100%\"\r\n        $margin=\"0\"\r\n        $marginTop=\"0.5rem\"\r\n        $marginBottom=\"2rem\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\nexport const PhoneBookListItem = styled.li`\r\n  position: relative;\r\n\r\n  /* display: flex;\r\n  justify-content: space-between;\r\n  align-items: center; */\r\n  display: grid;\r\n  grid-template-columns: 3.5fr 1fr 0.1fr 1.7fr 0.25fr 0.5fr 0.5fr;\r\n  grid-gap: 5px;\r\n  align-items: center;\r\n  padding: 0.2rem;\r\n  margin: 0.2rem;\r\n  border: 1px solid rgb(46, 191, 145);\r\n  border-radius: 8px;\r\n\r\n  &:hover {\r\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\r\n  }\r\n  /* overflow: hidden;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translateY(-50%) translateX(-110%) skew(-30deg);\r\n    width: 120%;\r\n    height: 120%;\r\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\r\n    transition: 500ms;\r\n    pointer-events: none;\r\n  }\r\n  &:hover::after {\r\n    transform: translateY(-50%) translateX(-8%) skew(-30deg);\r\n  } */\r\n`;\r\nexport const NameSpan = styled.span`\r\n  font-weight: 600;\r\n`;\r\nexport const TelSpan = styled(NameSpan)`\r\n  font-weight: 500;\r\n`;\r\nexport const DoubleDotSpan = styled.span`\r\n  font-weight: 600;\r\n  justify-self: center;\r\n  align-self: center;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { StyledTextInput, ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\r\nexport const EditContactForm = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  /* position: absolute;\r\n  left: 0;\r\n  top: -50%; */\r\n`;\r\nexport const EditInput = styled(StyledTextInput)`\r\n  width: 300px;\r\n  margin: 0;\r\n  margin-bottom: 0;\r\n`;\r\nexport const EditSubBtn = styled(ListBtn).attrs(props => ({\r\n  $padding: props.$padding || '0.3rem',\r\n}))`\r\n  background: rgb(131, 96, 195);\r\n  margin: 0;\r\n  padding: ${props => props.$padding};\r\n  color: black;\r\n  &:hover {\r\n    background: rgb(131, 96, 195);\r\n  }\r\n`;\r\nexport const CloseBtn = styled(EditSubBtn)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 20px;\r\n  height: 20px;\r\n  color: white;\r\n`;\r\n","import { Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { selectItems } from 'redux/contacts/selectors';\r\nimport { updateContact } from 'redux/contacts/operationsWithBackend';\r\nimport { motion } from 'framer-motion';\r\nimport { EditContactForm, CloseBtn, EditSubBtn } from './EditContactStyled';\r\nimport { FavoriteCheckboxSecond, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\r\nimport { selectItemsContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\r\n\r\nconst EditContact = ({ handleChangeEditOpen, contactId }) => {\r\n  const contactsItems = useSelector(selectItemsContacts);\r\n  const dispatch = useDispatch();\r\n  const existingContact = contactsItems.find(el => el._id === contactId);\r\n\r\n  const validate = values => {\r\n    const errors = {};\r\n    // if (!values.name) {\r\n    //   errors.name = 'Required';\r\n    // } else\r\n    if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.contactName)) {\r\n      errors.contactName = 'Invalid name';\r\n    }\r\n\r\n    // if (!values.number) {\r\n    //   errors.number = 'Required';\r\n    // } else\r\n    if (\r\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n        values.phoneNumber\r\n      )\r\n    )\r\n      // {\r\n      //   errors.phoneNumber = 'Invalid number';\r\n      // }\r\n\r\n      return errors;\r\n  };\r\n\r\n  // const editFormik = useFormik({\r\n  //   initialValues: {\r\n  //     contactName: existingContact.contactName,\r\n  //     phoneNumber: existingContact.phoneNumber,\r\n  //   },\r\n  //   validate,\r\n  //   onSubmit: values => {\r\n  //     const updContact = {\r\n  //       id: contactId,\r\n  //       contactName: values.contactName,\r\n  //       phoneNumber: values.phoneNumber,\r\n  //     };\r\n\r\n  //     if (\r\n  //       contactsItems.some(el => {\r\n  //         return (\r\n  //           el.contactName.toLowerCase() === updContact.contactName.toLowerCase() &&\r\n  //           el.phoneNumber === updContact.phoneNumber\r\n  //         );\r\n  //       })\r\n  //     ) {\r\n  //       editFormik.handleReset();\r\n  //       return alert(`${updContact.contactName} is already in list!`);\r\n  //     }\r\n\r\n  //     dispatch(updateContact(updContact));\r\n  //     editFormik.handleReset();\r\n  //     handleChangeEditOpen();\r\n  //   },\r\n  // });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        id: contactId,\r\n        contactName: existingContact.contactName,\r\n        phoneNumber: existingContact.phoneNumber,\r\n        favorite: existingContact.favorite,\r\n      }}\r\n      validate={validate}\r\n      onSubmit={(values, { setSubmitting, resetForm }) => {\r\n        // const updContact = {\r\n        //   id: contactId,\r\n        //   contactName: values.contactName,\r\n        //   phoneNumber: values.phoneNumber,\r\n        //   favorite: values.favorite,\r\n        // };\r\n\r\n        if (\r\n          contactsItems.some(el => {\r\n            return (\r\n              // el.contactName.toLowerCase() === updContact.contactName.toLowerCase() &&\r\n              // el.phoneNumber === updContact.phoneNumber\r\n              el.contactName.toLowerCase() === values.contactName.toLowerCase() &&\r\n              el.phoneNumber === values.phoneNumber &&\r\n              el.favorite === values.favorite\r\n            );\r\n          })\r\n        ) {\r\n          //  editFormik.handleReset();\r\n          resetForm();\r\n          // return alert(`${updContact.contactName} is already in list!`);\r\n          return alert(`You haven't changed anything!`);\r\n        }\r\n        // dispatch(updateContact(updContact));\r\n        dispatch(updateContact(values));\r\n        //  editFormik.handleReset();\r\n        handleChangeEditOpen();\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ handleSubmit, isSubmitting }) => (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          style={{\r\n            position: 'absolute',\r\n            left: '0',\r\n            top: '-90%',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            borderRadius: '8px',\r\n            // background: 'rgb(46, 191, 145)',\r\n            background: 'linear-gradient(310deg, rgb(46, 191, 145), rgb(131, 96, 195))',\r\n          }}\r\n        >\r\n          <EditContactForm onSubmit={handleSubmit}>\r\n            <NameInput\r\n              id=\"contactName\"\r\n              name=\"contactName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter new name\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              $width=\"300px\"\r\n              $margin=\"0\"\r\n              $marginBottom=\"0\"\r\n            />\r\n            <NameInput\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              type=\"tel\"\r\n              placeholder=\"Enter new number\"\r\n              title=\"Phone number may contains \\'+\\' and numbers\"\r\n              $width=\"300px\"\r\n              $margin=\"0\"\r\n              $marginBottom=\"0\"\r\n            />\r\n            <FavoriteCheckboxSecond name={'favorite'} />\r\n            <EditSubBtn $padding={'5px'} type=\"submit\" disabled={isSubmitting}>\r\n              Change\r\n            </EditSubBtn>\r\n            <CloseBtn type=\"button\" onClick={handleChangeEditOpen}>\r\n              X\r\n            </CloseBtn>\r\n          </EditContactForm>\r\n        </motion.div>\r\n      )}\r\n    </Formik>\r\n\r\n    // Old code on 'useFormik'\r\n    // <motion.div\r\n    //   initial={{ opacity: 0 }}\r\n    //   animate={{ opacity: 1 }}\r\n    //   exit={{ opacity: 0 }}\r\n    //   style={{\r\n    //     position: 'absolute',\r\n    //     left: '0',\r\n    //     top: '-90%',\r\n    //     width: '100%',\r\n    //     height: '100%',\r\n    //     display: 'flex',\r\n    //     alignItems: 'center',\r\n    //     borderRadius: '8px',\r\n    //     // background: 'rgb(46, 191, 145)',\r\n    //     background: 'linear-gradient(310deg, rgb(46, 191, 145), rgb(131, 96, 195))',\r\n    //   }}\r\n    // >\r\n    //   <EditContactForm onSubmit={editFormik.handleSubmit}>\r\n    //     <EditInput\r\n    //       id=\"contactName\"\r\n    //       name=\"contactName\"\r\n    //       type=\"text\"\r\n    //       title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n    //       onChange={editFormik.handleChange}\r\n    //       onBlur={editFormik.handleBlur}\r\n    //       value={editFormik.values.contactName}\r\n    //       $formadd=\"300px\"\r\n    //       placeholder=\"Enter new name\"\r\n    //     />\r\n    //     <EditInput\r\n    //       id=\"phoneNumber\"\r\n    //       name=\"phoneNumber\"\r\n    //       type=\"tel\"\r\n    //       title=\"Phone number may contains \\'+\\' and numbers\"\r\n    //       onChange={editFormik.handleChange}\r\n    //       onBlur={editFormik.handleBlur}\r\n    //       value={editFormik.values.phoneNumber}\r\n    //       $formadd=\"300px\"\r\n    //       placeholder=\"Enter new number\"\r\n    //     />\r\n    //     {editFormik.touched.phoneNumber && editFormik.errors.phoneNumber ? (\r\n    //       <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n    //         <ErrorDiv>{editFormik.errors.phoneNumber}</ErrorDiv>\r\n    //       </motion.div>\r\n    //     ) : null}\r\n    //     <EditSubBtn $padding={'5px'} type=\"submit\">\r\n    //       Change\r\n    //     </EditSubBtn>\r\n    //     <CloseBtn type=\"button\" onClick={handleChangeEditOpen}>\r\n    //       X\r\n    //     </CloseBtn>\r\n    //   </EditContactForm>\r\n    // </motion.div>\r\n  );\r\n};\r\n\r\nexport default EditContact;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContactWB } from 'redux/contacts/operationsWithBackend';\r\n// import { selectIsLoading } from 'redux/contacts/selectors';\r\nimport { PhoneBookListItem, NameSpan, TelSpan, DoubleDotSpan } from './PhoneBookListItemStyled';\r\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\r\nimport EditContact from 'components/EditContact/EditContact';\r\nimport { MdFavoriteBorder, MdFavorite } from 'react-icons/md';\r\nimport { useState } from 'react';\r\nimport { selectIsLoadingContacts } from 'redux/authAndContactsSlice/authAndContactsSelectors';\r\n\r\nfunction BookItem({ contactName, phoneNumber, id, favorite, category }) {\r\n  const dispatch = useDispatch();\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n  const handleChangeEditOpen = () => {\r\n    setIsEditOpen(prevState => !prevState);\r\n  };\r\n  // const isDeleting = useSelector(selectIsLoading);\r\n  const isDeleting = useSelector(selectIsLoadingContacts);\r\n\r\n  return (\r\n    <PhoneBookListItem>\r\n      <NameSpan>{contactName}</NameSpan>\r\n      <TelSpan>{category}</TelSpan> <DoubleDotSpan>:</DoubleDotSpan>{' '}\r\n      <TelSpan>{phoneNumber}</TelSpan>\r\n      {favorite ? <MdFavorite /> : <MdFavoriteBorder />}\r\n      <ListBtn type=\"button\" onClick={handleChangeEditOpen}>\r\n        Edit\r\n      </ListBtn>\r\n      <ListBtn type=\"button\" onClick={() => dispatch(deleteContactWB(id))}>\r\n        {isDeleting ? 'Deleting' : 'Delete'}\r\n      </ListBtn>\r\n      {isEditOpen && <EditContact handleChangeEditOpen={handleChangeEditOpen} contactId={id} />}\r\n    </PhoneBookListItem>\r\n  );\r\n}\r\n\r\nBookItem.propTypes = {\r\n  contactName: PropTypes.string.isRequired,\r\n  phoneNumber: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  favorite: PropTypes.bool.isRequired,\r\n  category: PropTypes.string.isRequired,\r\n};\r\nexport default BookItem;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchContactsWB } from 'redux/contacts/operationsWithBackend';\r\n// import {\r\n//   selectFilter,\r\n//   selectIsErrorPhoneBook,\r\n//   selectIsLoading,\r\n//   selectItems,\r\n// } from 'redux/contacts/selectors';\r\nimport { motion } from 'framer-motion';\r\nimport { ListContacts, LoadingMessage, ErrorSpanStyled } from './PhoneBookListStyled';\r\nimport BookItem from 'components/PhoneBookListItem/PhoneBookListItem';\r\nimport {\r\n  selectFilterContacts,\r\n  selectIsErrorContacts,\r\n  selectIsLoadingContacts,\r\n  selectItemsContacts,\r\n} from 'redux/authAndContactsSlice/authAndContactsSelectors';\r\n\r\nfunction PhoneBookList() {\r\n  // const contactsItemsRedux = useSelector(selectItems);\r\n  const contactsItemsRedux = useSelector(selectItemsContacts);\r\n  // const isLoadingRedux = useSelector(selectIsLoading);\r\n  const isLoadingRedux = useSelector(selectIsLoadingContacts);\r\n  // const isErrorReduxPhoneBook = useSelector(selectIsErrorPhoneBook);\r\n  const isErrorReduxPhoneBook = useSelector(selectIsErrorContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  // const filter = useSelector(selectFilter);\r\n  const filter = useSelector(selectFilterContacts);\r\n\r\n  const filteredArray = contactsItemsRedux.filter(el =>\r\n    el.contactName.toLowerCase().includes(filter)\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContactsWB());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isErrorReduxPhoneBook && (\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n          <ErrorSpanStyled>Some error hapenned: {isErrorReduxPhoneBook}</ErrorSpanStyled>\r\n          {/* Here I show an error message for the user - I think this is not necessary. Need to hide it, and show only notification?.. */}\r\n        </motion.div>\r\n      )}\r\n      {isLoadingRedux && (\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n          <LoadingMessage>Loading contacts...</LoadingMessage>\r\n        </motion.div>\r\n      )}\r\n      {!isLoadingRedux && (\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n          {contactsItemsRedux.length ? (\r\n            <>\r\n              <ListContacts>\r\n                {filteredArray.map(({ contactName, _id, phoneNumber, favorite, category }) => {\r\n                  return (\r\n                    <BookItem\r\n                      key={_id}\r\n                      contactName={contactName}\r\n                      phoneNumber={phoneNumber}\r\n                      id={_id}\r\n                      favorite={favorite}\r\n                      category={category}\r\n                    />\r\n                  );\r\n                })}\r\n              </ListContacts>\r\n            </>\r\n          ) : (\r\n            <p>Your list of contacts is empty!</p>\r\n          )}\r\n        </motion.div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PhoneBookList;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h2`\r\n  margin: 0.5rem;\r\n`;\r\nexport const ListContacts = styled.ul`\r\n  position: relative;\r\n  padding: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  font-size: 18px;\r\n  list-style: disc;\r\n`;\r\nexport const LoadingMessage = styled.p`\r\n  background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\r\n`;\r\n\r\nexport const ErrorSpanStyled = styled.span`\r\n  color: rgb(189, 4, 75);\r\n`;\r\n","import Filter from 'components/Filter/Filter';\r\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\r\nfunction Contacts() {\r\n  return (\r\n    <>\r\n      <Filter />\r\n      <PhoneBookList />\r\n    </>\r\n  );\r\n}\r\nexport default Contacts;\r\n"],"names":["filterValue","useSelector","selectFilterContacts","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Paragraph","StyledTextInput","onChange","evt","changeFilterUnited","target","value","toLowerCase","trim","placeholder","$width","$margin","$marginTop","$marginBottom","PhoneBookListItem","styled","_templateObject","_taggedTemplateLiteral","NameSpan","_templateObject2","TelSpan","_templateObject3","DoubleDotSpan","_templateObject4","EditContactForm","EditSubBtn","ListBtn","attrs","props","$padding","CloseBtn","_ref","handleChangeEditOpen","contactId","contactsItems","selectItemsContacts","existingContact","find","el","_id","Formik","initialValues","id","contactName","phoneNumber","favorite","validate","values","errors","test","onSubmit","_ref2","setSubmitting","resetForm","some","alert","updateContact","_ref3","handleSubmit","isSubmitting","motion","initial","opacity","animate","exit","style","position","left","top","width","height","display","alignItems","borderRadius","background","NameInput","name","type","title","FavoriteCheckboxSecond","disabled","onClick","category","_useState","useState","_useState2","_slicedToArray","isEditOpen","setIsEditOpen","prevState","isDeleting","selectIsLoadingContacts","MdFavorite","MdFavoriteBorder","deleteContactWB","EditContact","contactsItemsRedux","isLoadingRedux","isErrorReduxPhoneBook","selectIsErrorContacts","filter","filteredArray","includes","useEffect","fetchContactsWB","ErrorSpanStyled","LoadingMessage","length","ListContacts","map","BookItem","Title","Filter","PhoneBookList"],"sourceRoot":""}