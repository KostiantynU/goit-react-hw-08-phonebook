{"version":3,"file":"static/js/422.c7d43a1c.chunk.js","mappings":"4LACaA,E,QAAkBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4I,wJCyE1C,MAnEA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAuBXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SA1Be,SAAAC,GACf,IAAMC,EAAS,CAAC,EAiBhB,OAhBKD,EAAOH,MAEA,4CAA4CK,KAAKF,EAAOH,SAClEI,EAAOJ,MAAQ,iBAFfI,EAAOJ,MAAQ,WAKZG,EAAOF,WACVG,EAAOH,SAAW,YASbG,CACT,EAQEE,SAAU,SAAAH,GACR,IAAMI,GAAOC,EAAAA,EAAAA,GAAA,GAAQL,GACrBR,GAASc,EAAAA,EAAAA,IAAMF,IACfV,EAAOa,aACT,IAGF,OACEC,EAAAA,EAAAA,MAACpB,EAAAA,EAAe,CAACe,SAAUT,EAAOe,aAAaC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,uBACvBC,EAAAA,EAAAA,KAACE,EAAAA,IAASR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACS,KAAK,QAAQC,KAAK,SAAYrB,EAAOsB,cAAc,UAAQ,IAAEC,QAAQ,WAC/EvB,EAAOwB,QAAQrB,OAASH,EAAOO,OAAOJ,OACrCc,EAAAA,EAAAA,KAACQ,EAAAA,EAAAA,IAAU,CAACC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,KAAM,CAAEF,QAAS,GAAIX,UACjFC,EAAAA,EAAAA,KAAA,OAAAD,SAAMhB,EAAOO,OAAOJ,UAEpB,MAEJc,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,oBAC1BC,EAAAA,EAAAA,KAACE,EAAAA,IAASR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRS,KAAK,WACLC,KAAK,YACDrB,EAAOsB,cAAc,aAAW,IACpCC,QAAQ,WAETvB,EAAOwB,QAAQpB,UAAYJ,EAAOO,OAAOH,UACxCa,EAAAA,EAAAA,KAACQ,EAAAA,EAAAA,IAAU,CAACC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,KAAM,CAAEF,QAAS,GAAIX,UACjFC,EAAAA,EAAAA,KAAA,OAAAD,SAAMhB,EAAOO,OAAOH,aAEpB,MAEJa,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CAACV,KAAK,SAASW,QAAQ,YAAWf,SAAC,aAKhD,EChEA,MAPA,WACE,OACEC,EAAAA,EAAAA,KAAAe,EAAAA,SAAA,CAAAhB,UACEC,EAAAA,EAAAA,KAACgB,EAAS,KAGhB,C","sources":["components/LogInForm/LogInFormStyled.js","components/LogInForm/LogInForm.jsx","pages/LogInPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nexport const LogInFormStyled = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n","import { useFormik } from 'formik';\nimport { motion } from 'framer-motion';\nimport { logIn } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { AddBtn, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { LogInFormStyled } from './LogInFormStyled';\n\nfunction LogInForm() {\n  const dispatch = useDispatch();\n\n  const validate = values => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email';\n    }\n\n    if (!values.password) {\n      errors.password = 'Required';\n    }\n    //   if (\n    //   !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/i.test(values.password)\n    // )\n    // else {\n    //   errors.password = 'Invalid password';\n    // }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validate,\n    onSubmit: values => {\n      const logUser = { ...values };\n      dispatch(logIn(logUser));\n      formik.handleReset();\n    },\n  });\n\n  return (\n    <LogInFormStyled onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Enter your e-mail</label>\n      <NameInput type=\"email\" name=\"email\" {...formik.getFieldProps('email')} formadd=\"400px\" />\n      {formik.touched.email && formik.errors.email ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.email}</div>\n        </motion.div>\n      ) : null}\n\n      <label htmlFor=\"password\">Enter password</label>\n      <NameInput\n        type=\"password\"\n        name=\"password\"\n        {...formik.getFieldProps('password')}\n        formadd=\"400px\"\n      />\n      {formik.touched.password && formik.errors.password ? (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <div>{formik.errors.password}</div>\n        </motion.div>\n      ) : null}\n\n      <AddBtn type=\"submit\" padding=\"10px 15px\">\n        LogIn!\n      </AddBtn>\n    </LogInFormStyled>\n  );\n}\n\nexport default LogInForm;\n// this is for create pass (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")\n// this is for create pass, less difficulty (\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\")\n","import LogInForm from 'components/LogInForm/LogInForm';\nfunction LogInPage() {\n  return (\n    <>\n      <LogInForm />\n    </>\n  );\n}\nexport default LogInPage;\n"],"names":["LogInFormStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validate","values","errors","test","onSubmit","logUser","_objectSpread","logIn","handleReset","_jsxs","handleSubmit","children","_jsx","htmlFor","NameInput","type","name","getFieldProps","formadd","touched","motion","initial","opacity","animate","exit","AddBtn","padding","_Fragment","LogInForm"],"sourceRoot":""}