{"version":3,"file":"static/js/236.1641db71.chunk.js","mappings":"gLACaA,E,QAAkBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4I,8IC4I1C,EAvI2B,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAoCjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,UAAW,GACXC,aAAc,GACdC,SAAU,IAEZC,SA1Ca,SAAAC,GACf,IAAMC,EAAS,CAAC,EAiBhB,OAhBKD,EAAOJ,UAEA,4CAA4CM,KAAKF,EAAOJ,aAClEK,EAAOL,UAAY,iBAFnBK,EAAOL,UAAY,oBAKhBI,EAAOH,aAEA,+CAA+CK,KAAKF,EAAOH,gBACrEI,EAAOJ,aAAe,oBAFtBI,EAAOJ,aAAe,uBAKnBG,EAAOF,WACVG,EAAOH,SAAW,oBAGbG,CACT,EAwBIE,SAAU,SAACH,EAAMI,GAAoC,IAAhCC,EAAaD,EAAbC,cAAeC,EAASF,EAATE,UAClCD,GAAc,GACd,IAAME,GAAOC,EAAAA,EAAAA,GAAA,GAAQR,GACrBT,GAASkB,EAAAA,EAAAA,IAASF,IAClBF,GAAc,GACdC,GACF,EAAEI,SAED,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAYF,EAAZE,aAAY,OAC5BC,EAAAA,EAAAA,MAAC3B,EAAAA,EAAe,CAACgB,SAAUS,EAAaF,SAAA,EACtCjB,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,GAAG,WACHC,KAAK,OACLC,KAAK,WACLC,MAAM,kBACNC,YAAY,aACZC,cAAc,YAEhB5B,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,GAAG,YACHC,KAAK,QACLC,KAAK,YACLC,MAAM,oBACNC,YAAY,sBACZC,cAAc,YAEhB5B,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CACRC,GAAG,eACHC,KAAK,WACLC,KAAK,eACLC,MAAM,sBACNC,YAAY,iBACZC,cAAc,YAEhB5B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CAACL,KAAK,SAASM,SAAS,YAAYC,SAAUX,EAAaH,SAAC,gBAGnD,GAgD1B,E,UC3HA,EAVqB,WACnB,OACEI,EAAAA,EAAAA,MAAAW,EAAAA,SAAA,CAAAf,SAAA,EACEjB,EAAAA,EAAAA,KAACiC,EAAkB,KACnBjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAa,CAACC,GAAG,SAASC,WAAW,OAAOC,YAAY,OAAOC,MAAM,QAAOrB,SAAC,gBAKpF,C","sources":["components/LogInForm/LogInFormStyled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nexport const LogInFormStyled = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n`;\n","import { Formik } from 'formik';\nimport { register } from 'redux/auth/authOperations';\nimport { AddBtn, NameInput } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport { LogInFormStyled } from 'components/LogInForm/LogInFormStyled';\nimport { useDispatch } from 'react-redux';\n\nconst RegisterFormStyled = () => {\n  const dispatch = useDispatch();\n  const validate = values => {\n    const errors = {};\n    if (!values.userEmail) {\n      errors.userEmail = 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.userEmail)) {\n      errors.userEmail = 'Invalid email';\n    }\n\n    if (!values.userPassword) {\n      errors.userPassword = 'Password is required';\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/i.test(values.userPassword)) {\n      errors.userPassword = 'Invalid password';\n    }\n\n    if (!values.userName) {\n      errors.userName = 'Name is required';\n    }\n\n    return errors;\n  };\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     userEmail: '',\n  //     userPassword: '',\n  //     userName: '',\n  //   },\n  //   validate,\n  //   onSubmit: values => {\n  //     const newUser = { ...values };\n  //     dispatch(register(newUser));\n  //     formik.handleReset();\n  //   },\n  // });\n\n  return (\n    <Formik\n      initialValues={{\n        userEmail: '',\n        userPassword: '',\n        userName: '',\n      }}\n      validate={validate}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setSubmitting(true);\n        const newUser = { ...values };\n        dispatch(register(newUser));\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      {({ handleSubmit, isSubmitting }) => (\n        <LogInFormStyled onSubmit={handleSubmit}>\n          <NameInput\n            id=\"userName\"\n            type=\"text\"\n            name=\"userName\"\n            label=\"Enter your name\"\n            placeholder=\"Kostiantyn\"\n            $marginBottom=\"1.5rem\"\n          />\n          <NameInput\n            id=\"userEmail\"\n            type=\"email\"\n            name=\"userEmail\"\n            label=\"Enter your e-mail\"\n            placeholder=\"example@example.com\"\n            $marginBottom=\"1.5rem\"\n          />\n          <NameInput\n            id=\"userPassword\"\n            type=\"password\"\n            name=\"userPassword\"\n            label=\"Enter your password\"\n            placeholder=\"Enter password\"\n            $marginBottom=\"1.5rem\"\n          />\n          <AddBtn type=\"submit\" $padding=\"10px 15px\" disabled={isSubmitting}>\n            Register!\n          </AddBtn>\n        </LogInFormStyled>\n      )}\n    </Formik>\n    // <LogInFormStyled onSubmit={formik.handleSubmit}>\n    //   <label htmlFor=\"userName\">Enter your name</label>\n    //   <StyledTextInput\n    //     type=\"text\"\n    //     name=\"userName\"\n    //     {...formik.getFieldProps('userName')}\n    //     $formadd=\"400px\"\n    //   />\n    //   {formik.touched.userName && formik.errors.userName ? (\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n    //       <div>{formik.errors.userName}</div>\n    //     </motion.div>\n    //   ) : null}\n\n    //   <label htmlFor=\"userEmail\">Enter your e-mail</label>\n    //   <StyledTextInput\n    //     type=\"email\"\n    //     name=\"userEmail\"\n    //     {...formik.getFieldProps('userEmail')}\n    //     $formadd=\"400px\"\n    //   />\n    //   {formik.touched.userEmail && formik.errors.userEmail ? (\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n    //       <div>{formik.errors.userEmail}</div>\n    //     </motion.div>\n    //   ) : null}\n\n    //   <label htmlFor=\"userPassword\">Enter password</label>\n    //   <StyledTextInput\n    //     type=\"password\"\n    //     name=\"userPassword\"\n    //     {...formik.getFieldProps('userPassword')}\n    //     $formadd=\"400px\"\n    //   />\n    //   {formik.touched.userPassword && formik.errors.userPassword ? (\n    //     <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n    //       <div>{formik.errors.userPassword}</div>\n    //     </motion.div>\n    //   ) : null}\n\n    // <AddBtn type=\"submit\" $padding=\"10px 15px\">\n    //   Register!\n    // </AddBtn>\n    // </LogInFormStyled>\n  );\n};\n\n// this is for create pass (\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")\n// this is for create pass, less difficulty (\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\")\n\nexport default RegisterFormStyled;\n","import RegisterFormStyled from 'components/RegisterForm/RegisterForm';\nimport { StyledNavLink } from 'components/SharedLayout/AppBarStyled';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterFormStyled />\n      <StyledNavLink to=\"/login\" marginleft=\"auto\" marginright=\"auto\" width=\"120px\">\n        Or logIn!\n      </StyledNavLink>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["LogInFormStyled","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","_jsx","Formik","initialValues","userEmail","userPassword","userName","validate","values","errors","test","onSubmit","_ref","setSubmitting","resetForm","newUser","_objectSpread","register","children","_ref2","handleSubmit","isSubmitting","_jsxs","NameInput","id","type","name","label","placeholder","$marginBottom","AddBtn","$padding","disabled","_Fragment","RegisterFormStyled","StyledNavLink","to","marginleft","marginright","width"],"sourceRoot":""}