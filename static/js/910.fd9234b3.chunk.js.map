{"version":3,"file":"static/js/910.fd9234b3.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","components/PhoneBookListItem/PhoneBookListItemStyled.js","components/EditContact/EditContactStyled.js","components/EditContact/EditContact.jsx","components/PhoneBookListItem/PhoneBookListItem.jsx","components/PhoneBookList/PhoneBookList.jsx","components/PhoneBookList/PhoneBookListStyled.js","pages/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/contactsSliceWB';\nimport { SearchInput, Paragraph } from '../PhoneBookForm/PhoneBookFormStyled';\n\nfunction Filter() {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Paragraph>Find contacts by name</Paragraph>\n      <SearchInput\n        onChange={evt => dispatch(changeFilter(evt.target.value.toLowerCase().trim()))}\n        value={filterValue}\n        $formadd=\"90%\"\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nexport const PhoneBookListItem = styled.li`\n  position: relative;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.2rem;\n  margin: 0.2rem;\n  border: 1px solid rgb(46, 191, 145);\n  border-radius: 8px;\n\n  &:hover {\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n  }\n  /* overflow: hidden;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%) translateX(-110%) skew(-30deg);\n    width: 120%;\n    height: 120%;\n    background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n    transition: 500ms;\n    pointer-events: none;\n  }\n  &:hover::after {\n    transform: translateY(-50%) translateX(-8%) skew(-30deg);\n  } */\n`;\nexport const NameSpan = styled.span`\n  font-weight: 600;\n`;\nexport const TelSpan = styled(NameSpan)`\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\nimport { NameInput, ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nexport const EditContactForm = styled.form`\n  display: flex;\n  width: 100%;\n  justify-content: space-evenly;\n  align-items: center;\n  /* position: absolute;\n  left: 0;\n  top: -50%; */\n`;\nexport const EditInput = styled(NameInput)`\n  width: 300px;\n  margin: 0;\n  margin-bottom: 0;\n`;\nexport const EditSubBtn = styled(ListBtn).attrs(props => ({\n  $padding: props.$padding || '0.3rem',\n}))`\n  background: rgb(131, 96, 195);\n  margin: 0;\n  padding: ${props => props.$padding};\n  color: black;\n  &:hover {\n    background: rgb(131, 96, 195);\n  }\n`;\nexport const CloseBtn = styled(EditSubBtn)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 20px;\n  height: 20px;\n  color: white;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { updateContact } from 'redux/contacts/operationsWithBackend';\nimport { motion } from 'framer-motion';\nimport { EditContactForm, EditInput, CloseBtn, EditSubBtn } from './EditContactStyled';\nimport { ErrorDiv } from 'components/PhoneBookForm/PhoneBookFormStyled';\n\nconst EditContact = ({ handleChangeEditOpen, contactId }) => {\n  const contactsItems = useSelector(selectItems);\n  const dispatch = useDispatch();\n  const existingContact = contactsItems.find(el => el._id === contactId);\n\n  const validate = values => {\n    const errors = {};\n    // if (!values.name) {\n    //   errors.name = 'Required';\n    // } else\n    if (!/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(values.contactName)) {\n      errors.contactName = 'Invalid name';\n    }\n\n    // if (!values.number) {\n    //   errors.number = 'Required';\n    // } else\n    if (\n      !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n        values.phoneNumber\n      )\n    )\n      // {\n      //   errors.phoneNumber = 'Invalid number';\n      // }\n\n      return errors;\n  };\n\n  const editFormik = useFormik({\n    initialValues: {\n      contactName: existingContact.contactName,\n      phoneNumber: existingContact.phoneNumber,\n    },\n    validate,\n    onSubmit: values => {\n      const updContact = {\n        id: contactId,\n        contactName: values.contactName,\n        phoneNumber: values.phoneNumber,\n      };\n\n      if (\n        contactsItems.some(el => {\n          return (\n            el.contactName.toLowerCase() === updContact.contactName.toLowerCase() &&\n            el.phoneNumber === updContact.phoneNumber\n          );\n        })\n      ) {\n        editFormik.handleReset();\n        return alert(`${updContact.contactName} is already in list!`);\n      }\n\n      dispatch(updateContact(updContact));\n      editFormik.handleReset();\n      handleChangeEditOpen();\n    },\n  });\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        style={{\n          position: 'absolute',\n          left: '0',\n          top: '-90%',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          borderRadius: '8px',\n          // background: 'rgb(46, 191, 145)',\n          background: 'linear-gradient(310deg, rgb(46, 191, 145), rgb(131, 96, 195))',\n        }}\n      >\n        <EditContactForm onSubmit={editFormik.handleSubmit}>\n          <EditInput\n            id=\"contactName\"\n            name=\"contactName\"\n            type=\"text\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={editFormik.handleChange}\n            onBlur={editFormik.handleBlur}\n            value={editFormik.values.contactName}\n            $formadd=\"300px\"\n            placeholder=\"Enter new name\"\n          />\n          <EditInput\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            type=\"tel\"\n            title=\"Phone number may contains \\'+\\' and numbers\"\n            onChange={editFormik.handleChange}\n            onBlur={editFormik.handleBlur}\n            value={editFormik.values.phoneNumber}\n            $formadd=\"300px\"\n            placeholder=\"Enter new number\"\n          />\n          {editFormik.touched.phoneNumber && editFormik.errors.phoneNumber ? (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n              <ErrorDiv>{editFormik.errors.phoneNumber}</ErrorDiv>\n            </motion.div>\n          ) : null}\n          <EditSubBtn $padding={'5px'} type=\"submit\">\n            Change\n          </EditSubBtn>\n          <CloseBtn type=\"button\" onClick={handleChangeEditOpen}>\n            X\n          </CloseBtn>\n        </EditContactForm>\n      </motion.div>\n    </>\n  );\n};\n\nexport default EditContact;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactWB } from 'redux/contacts/operationsWithBackend';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { PhoneBookListItem, NameSpan, TelSpan } from './PhoneBookListItemStyled';\nimport { ListBtn } from 'components/PhoneBookForm/PhoneBookFormStyled';\nimport EditContact from 'components/EditContact/EditContact';\nimport { useState } from 'react';\n\nfunction BookItem({ contactName, phoneNumber, id }) {\n  const dispatch = useDispatch();\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const handleChangeEditOpen = () => {\n    setIsEditOpen(prevState => !prevState);\n  };\n  const isDeleting = useSelector(selectIsLoading);\n\n  return (\n    <PhoneBookListItem>\n      <NameSpan>{contactName} :</NameSpan> <TelSpan>{phoneNumber}</TelSpan>\n      <ListBtn type=\"button\" onClick={handleChangeEditOpen}>\n        Edit\n      </ListBtn>\n      <ListBtn type=\"button\" onClick={() => dispatch(deleteContactWB(id))}>\n        {isDeleting ? 'Deleting' : 'Delete'}\n      </ListBtn>\n      {isEditOpen && <EditContact handleChangeEditOpen={handleChangeEditOpen} contactId={id} />}\n    </PhoneBookListItem>\n  );\n}\n\nBookItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\nexport default BookItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactsWB } from 'redux/contacts/operationsWithBackend';\nimport {\n  selectFilter,\n  selectIsError,\n  selectIsLoading,\n  selectItems,\n} from 'redux/contacts/selectors';\nimport { motion } from 'framer-motion';\nimport { ListContacts, LoadingMessage } from './PhoneBookListStyled';\nimport BookItem from 'components/PhoneBookListItem/PhoneBookListItem';\n\nfunction PhoneBookList() {\n  const contactsItemsRedux = useSelector(selectItems);\n  const isLoadingRedux = useSelector(selectIsLoading);\n  const isErrorRedux = useSelector(selectIsError);\n\n  const filter = useSelector(selectFilter);\n\n  const filteredArray = contactsItemsRedux.filter(el =>\n    el.contactName.toLowerCase().includes(filter)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsWB());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isErrorRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <p>Some error hapenned: {isErrorRedux}</p>\n          {/* Here I show an error message for the user - I think this is not necessary. Need to hide it, and show only notification?.. */}\n        </motion.div>\n      )}\n      {isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <LoadingMessage>Loading contacts...</LoadingMessage>\n        </motion.div>\n      )}\n      {!isLoadingRedux && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          {contactsItemsRedux.length ? (\n            <>\n              <ListContacts>\n                {filteredArray.map(({ contactName, _id, phoneNumber }) => {\n                  return (\n                    <BookItem\n                      key={_id}\n                      contactName={contactName}\n                      phoneNumber={phoneNumber}\n                      id={_id}\n                    />\n                  );\n                })}\n              </ListContacts>\n            </>\n          ) : (\n            <p>Your list of contacts is empty!</p>\n          )}\n        </motion.div>\n      )}\n    </>\n  );\n}\n\nexport default PhoneBookList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 0.5rem;\n`;\nexport const ListContacts = styled.ul`\n  position: relative;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 18px;\n  list-style: disc;\n`;\nexport const LoadingMessage = styled.p`\n  background-image: linear-gradient(155deg, rgba(131, 96, 195, 0.2), rgba(46, 191, 145, 0.3));\n`;\n","import Filter from 'components/Filter/Filter';\nimport PhoneBookList from 'components/PhoneBookList/PhoneBookList';\nfunction Contacts() {\n  return (\n    <>\n      <Filter />\n      <PhoneBookList />\n    </>\n  );\n}\nexport default Contacts;\n","export const selectFilter = state => state.contacts.filter;\nexport const selectItems = state => state.contacts.phonebook.items;\nexport const selectIsError = state => state.contacts.phonebook.isError;\nexport const selectIsLoading = state => state.contacts.phonebook.selectIsLoading;\n"],"names":["filterValue","useSelector","selectFilter","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Paragraph","SearchInput","onChange","evt","changeFilter","target","value","toLowerCase","trim","$formadd","PhoneBookListItem","styled","_templateObject","_taggedTemplateLiteral","NameSpan","_templateObject2","TelSpan","_templateObject3","EditContactForm","EditInput","NameInput","EditSubBtn","ListBtn","attrs","props","$padding","CloseBtn","_templateObject4","_ref","handleChangeEditOpen","contactId","contactsItems","selectItems","existingContact","find","el","_id","editFormik","useFormik","initialValues","contactName","phoneNumber","validate","values","errors","test","onSubmit","updContact","id","some","handleReset","alert","concat","updateContact","motion","initial","opacity","animate","exit","style","position","left","top","width","height","display","alignItems","borderRadius","background","handleSubmit","name","type","title","handleChange","onBlur","handleBlur","placeholder","touched","ErrorDiv","onClick","_useState","useState","_useState2","_slicedToArray","isEditOpen","setIsEditOpen","prevState","isDeleting","selectIsLoading","deleteContactWB","EditContact","contactsItemsRedux","isLoadingRedux","isErrorRedux","selectIsError","filter","filteredArray","includes","useEffect","fetchContactsWB","LoadingMessage","length","ListContacts","map","BookItem","Title","Filter","PhoneBookList","state","contacts","phonebook","items","isError"],"sourceRoot":""}